<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jacky's Notes]]></title>
  <subtitle><![CDATA[Learn, Record, Share]]></subtitle>
  <link href="/hexoblog/atom.xml" rel="self"/>
  <link href="http://hungjie19.github.io/hexoblog/"/>
  <updated>2016-05-22T15:33:57.355Z</updated>
  <id>http://hungjie19.github.io/hexoblog/</id>
  
  <author>
    <name><![CDATA[hungjie19]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用 hackmd online editor 與 markdown 語法製作工程師簡報]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2016/05/20/%E4%BD%BF%E7%94%A8-hackmd-online-editor-%E8%88%87-markdown-%E8%AA%9E%E6%B3%95%E8%A3%BD%E4%BD%9C%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%B0%A1%E5%A0%B1/"/>
    <id>http://hungjie19.github.io/hexoblog/2016/05/20/使用-hackmd-online-editor-與-markdown-語法製作工程師簡報/</id>
    <published>2016-05-20T15:01:16.000Z</published>
    <updated>2016-05-21T04:22:52.000Z</updated>
    <content type="html"><![CDATA[<h2 id="HackMD_投影片語法介紹：">HackMD 投影片語法介紹：</h2>
<h2 id="章節與小節語法">章節與小節語法</h2>
<table>
<thead>
<tr>
<th style="text-align:center">按鍵與方向</th>
<th>定義</th>
<th>分頁符號</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">→</td>
<td>章節</td>
<td>- - -</td>
</tr>
<tr>
<td style="text-align:center">↓</td>
<td>小節</td>
<td>- - - -</td>
</tr>
</tbody>
</table>
<h3 id="範例：">範例：</h3>
<p>假設我們要介紹一本書從首頁～第二章它的結構如下</p>
<ul>
<li>首頁</li>
<li>第一章<ul>
<li>1.1 節</li>
<li>1.2 節</li>
</ul>
</li>
<li>第二章</li>
</ul>
<h3 id="語法範例：">語法範例：</h3>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">首頁</div><div class="line"></div><div class="line"><span class="horizontal_rule">--- (→ 章節)</span></div><div class="line"> </div><div class="line"><span class="header"># 第一章</span></div><div class="line"></div><div class="line"><span class="horizontal_rule">---- (↓ 小節)</span></div><div class="line"></div><div class="line"><span class="header"># 1.1 節</span></div><div class="line">內容..</div><div class="line"></div><div class="line"><span class="horizontal_rule">---- (↓ 小節)</span></div><div class="line"></div><div class="line"><span class="header"># 1.2 節</span></div><div class="line">內容..</div><div class="line"></div><div class="line"><span class="horizontal_rule">--- (→ 章節)</span></div><div class="line"></div><div class="line"><span class="header"># 第二章</span></div></pre></td></tr></table></figure>

<h4 id="小提醒">小提醒</h4>
<ul>
<li>分頁符號最好前後加上空行，才不會有語法沒有解析到的情形</li>
<li>分頁符號解析成功在編輯器內會變成藍色</li>
<li>按下 <code>esc</code> 可以看到簡報結構</li>
</ul>
<hr>
<h2 id="更換投影片背景顏色">更換投影片背景顏色</h2>
<p>Is the background syntax</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- .slide: data-background="#1A237E" --&gt;</span>`</div></pre></td></tr></table></figure>

<p>將需要的顏色使用 <code>Hex Color</code> 修改成相對應色碼既可。</p>
<hr>
<h2 id="為內容加上淡出動畫">為內容加上淡出動畫</h2>
<p>Is the fragment syntax</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="1" --&gt;</span></div></pre></td></tr></table></figure>

<p>直接修改 <code>data-fragment-index=&quot;1&quot;</code> 的值就可以調整出場順序</p>
<h4 id="淡出動畫_範例：">淡出動畫 範例：</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line"></div><div class="line">## 淡出動畫</div><div class="line">- 淡出動畫1<span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="1" --&gt;</span></div><div class="line">- 淡出動畫2<span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="2" --&gt;</span></div><div class="line">- 淡出動畫2<span class="comment">&lt;!-- .element: class="fragment" data-fragment-index="3" --&gt;</span></div><div class="line"></div><div class="line">---</div></pre></td></tr></table></figure>

<hr>
<h2 id="調整投影片轉場動畫">調整投影片轉場動畫</h2>
<p>Is the transition syntax</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- .slide: data-transition="concave" --&gt;</span></div></pre></td></tr></table></figure>

<h4 id="轉場動畫其他效果：">轉場動畫其他效果：</h4>
<table>
<thead>
<tr>
<th style="text-align:center">效果名稱</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">none</td>
<td>無</td>
</tr>
<tr>
<td style="text-align:center">fade</td>
<td>淡入淡出</td>
</tr>
<tr>
<td style="text-align:center">slide</td>
<td>向左平移</td>
</tr>
<tr>
<td style="text-align:center">convex</td>
<td>向內旋轉</td>
</tr>
<tr>
<td style="text-align:center">concave</td>
<td>向外旋轉</td>
</tr>
<tr>
<td style="text-align:center">zoom</td>
<td>向外放大</td>
</tr>
</tbody>
</table>
<p>並且可以分別為投影片 進/出場，加上後綴符號設定：</p>
<ul>
<li>進場：<code>-in</code></li>
<li>出場：<code>-out</code></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">特效加上後綴符號範例:</div><div class="line"><span class="comment">&lt;!-- .slide: data-transition="zoom-in convex-out" --&gt;</span></div></pre></td></tr></table></figure>

<hr>
<h2 id="調整投影片轉場速度">調整投影片轉場速度</h2>
<p>Custom the transition speed!</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- .slide: data-transition-speed="fast" --&gt;</span></div></pre></td></tr></table></figure>

<p>速度有三種可以調整：</p>
<ul>
<li>default</li>
<li>fast</li>
<li>slow</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="HackMD_投影片語法介紹：">HackMD 投影片語法介紹：</h2>
<h2 id="章節與小節語法">章節與小節語法</h2>
<table>
<thead>
<tr>
<th style="text-align:center">按鍵與方向</th>
<t]]>
    </summary>
    
      <category term="HackMD" scheme="http://hungjie19.github.io/hexoblog/tags/HackMD/"/>
    
      <category term="markdown" scheme="http://hungjie19.github.io/hexoblog/tags/markdown/"/>
    
      <category term="presentation" scheme="http://hungjie19.github.io/hexoblog/tags/presentation/"/>
    
      <category term="slide" scheme="http://hungjie19.github.io/hexoblog/tags/slide/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[markdown 簡介以 hackmd 為例 - softnshare.slack.com ES6 線上讀書會直播錄影內容]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2016/05/19/markdown-%E7%B0%A1%E4%BB%8B%E4%BB%A5-hackmd-%E7%82%BA%E4%BE%8B-softnshare-slack-com-ES6-%E7%B7%9A%E4%B8%8A%E8%AE%80%E6%9B%B8%E6%9C%83%E7%9B%B4%E6%92%AD%E9%8C%84%E5%BD%B1%E5%85%A7%E5%AE%B9/"/>
    <id>http://hungjie19.github.io/hexoblog/2016/05/19/markdown-簡介以-hackmd-為例-softnshare-slack-com-ES6-線上讀書會直播錄影內容/</id>
    <published>2016-05-19T15:31:59.000Z</published>
    <updated>2016-05-19T15:39:54.000Z</updated>
    <content type="html"><![CDATA[<p><br></p>
<iframe width="420" height="315" src="https://www.youtube.com/embed/8maKJ6CJ9no" frameborder="0" allowfullscreen><br></iframe>

<p><a href="https://youtu.be/8maKJ6CJ9no" target="_blank" rel="external">youtube link</a></p>
<p>第一次直播錄影好緊張啊…一堆東西講錯，有了這次的經驗下次大概知道怎麼改善跟避免了，說錯的地方，請不吝指教，謝謝囉。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><br></p>
<iframe width="420" height="315" src="https://www.youtube.com/embed/8maKJ6CJ9no" frameborder="0" allowfullscreen><br></iframe>

]]>
    </summary>
    
      <category term="markdown" scheme="http://hungjie19.github.io/hexoblog/tags/markdown/"/>
    
      <category term="hackmd" scheme="http://hungjie19.github.io/hexoblog/tags/hackmd/"/>
    
      <category term="slack@softnshare" scheme="http://hungjie19.github.io/hexoblog/tags/slack-softnshare/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[what is markdown and who use it]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2016/05/17/what-is-markdown-and-who-use-it/"/>
    <id>http://hungjie19.github.io/hexoblog/2016/05/17/what-is-markdown-and-who-use-it/</id>
    <published>2016-05-16T16:30:45.000Z</published>
    <updated>2016-05-17T16:52:06.000Z</updated>
    <content type="html"><![CDATA[<h2 id="what_is_markdown_?">what is markdown ?</h2>
<p><code>Markdown</code> 是一種格式化文件的語言。</p>
<p>一種輕量的標記語言，最終會轉換成 HTML 語法，既可輕易散佈在網路上。</p>
<h3 id="主要優點：">主要優點：</h3>
<ol>
<li>纯文字檔案，任何編輯器可以撰寫。</li>
<li>讓大家<code>不需要</code>學習複雜的 HTML 語法就能夠使用標記語言格式。</li>
<li>語法簡單，易學。</li>
<li>好閱讀，就算沒有轉化成 HTML 語言之前結構也是非常完整的。</li>
<li>甚至已經取代我做筆記的格式。</li>
</ol>
<a id="more"></a>
<h3 id="附檔名：">附檔名：</h3>
<ol>
<li><code>.md</code></li>
<li><code>.markdown</code></li>
</ol>
<p>以上皆可，如果在 gitLab 中使用 New Page 所產生的檔案附檔名為: <code>.markdown</code>。</p>
<h2 id="誰在用_?">誰在用 ?</h2>
<ul>
<li>Github</li>
<li>GitLab</li>
<li>hackpad</li>
<li>HackMD</li>
<li>FaceBook Notes</li>
<li>Slack</li>
<li>Medium</li>
<li>Dropbox Paper</li>
<li>Quip</li>
</ul>
<p>越來越多 <code>文章發佈系統</code> 或 <code>溝通軟體</code>，都已經支援 markdown 格式，好 markdown 不學嗎？</p>
<hr>
<h2 id="markdown_syntax">markdown syntax</h2>
<h3 id="標題大到小">標題大到小</h3>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="header"># H1 test</span></div><div class="line"><span class="header">## H2 test</span></div><div class="line">...</div><div class="line"><span class="header">###### H6 test</span></div></pre></td></tr></table></figure>

<h1 id="H1_test">H1 test</h1>
<h2 id="H2_test">H2 test</h2>
<h6 id="H6_test">H6 test</h6>
<hr>
<h3 id="加入列表">加入列表</h3>
<p>通常我們會條列式的逐條記錄內容重點，既可使用以下語法。</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">列表範例：</div><div class="line"><span class="bullet">- </span>珍珠奶茶</div><div class="line"><span class="code">    - 半糖微冰 2</span></div><div class="line"><span class="code">    - 三分微冰 4</span></div><div class="line"><span class="code">    - 無糖去冰 5</span></div><div class="line"><span class="bullet">- </span>雞排</div><div class="line"><span class="code">    - 切</span></div><div class="line"><span class="code">        - 原味 2</span></div><div class="line"><span class="code">        - 辣味 4</span></div><div class="line"><span class="code">    - 不切</span></div><div class="line"><span class="code">        - 原味 3</span></div><div class="line"><span class="code">        - 辣味 7</span></div><div class="line"></div><div class="line">數字列表範例：</div><div class="line"><span class="bullet">1. </span>復仇者聯盟</div><div class="line"><span class="bullet">2. </span>鋼鐵人</div><div class="line"><span class="bullet">3. </span>美國隊長</div></pre></td></tr></table></figure>

<hr>
<p>列表範例：</p>
<ul>
<li>珍珠奶茶<ul>
<li>半糖微冰 2</li>
<li>三分微冰 4</li>
<li>無糖去冰 5</li>
</ul>
</li>
<li>雞排<ul>
<li>切<ul>
<li>原味 2</li>
<li>辣味 4</li>
</ul>
</li>
<li>不切<ul>
<li>原味 3</li>
<li>辣味 7</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>數字列表範例：</p>
<ol>
<li>復仇者聯盟</li>
<li>鋼鐵人</li>
<li>美國隊長</li>
</ol>
<hr>
<h3 id="數字列表的小技巧">數字列表的小技巧</h3>
<p>情境：如果我要把以上範例的 <code>復仇者聯盟</code> 移動到最後一筆，那我不就要把所有編號也改過一次…</p>
<p>不，你只需要記住數字列表都使用 <code>1.</code> 當語法就可以了，程式會依序幫你編號。 </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">語法：</div><div class="line"><span class="bullet">1. </span>鋼鐵人</div><div class="line"><span class="bullet">1. </span>美國隊長</div><div class="line"><span class="bullet">1. </span>復仇者聯盟</div></pre></td></tr></table></figure>

<p>範例：</p>
<ol>
<li>鋼鐵人</li>
<li>美國隊長</li>
<li>復仇者聯盟</li>
</ol>
<hr>
<h3 id="加入一段程式碼">加入一段程式碼</h3>
<p>這個功能算是 markdown 重要的應用，一般的 <code>文字記錄簿 (word text or blog)</code> 都無法將程式碼縮排完整保留，而透過 markdown 格式發佈後還可以完整記錄下來。</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">// markdown example:</div><div class="line">｀｀｀ markdown</div><div class="line"><span class="header"># H1 test</span></div><div class="line"><span class="header">## H2 test</span></div><div class="line">｀｀｀</div><div class="line"></div><div class="line">// javascript example:</div><div class="line">｀｀｀ javascript</div><div class="line">function(){</div><div class="line"><span class="code">    console.log('markdown test OK!');</span></div><div class="line">}</div><div class="line">｀｀｀</div><div class="line"></div><div class="line">// 解釋</div><div class="line">｀｀｀ language</div><div class="line"><span class="bullet">1. </span>區塊上下各插入三個 ｀ 符號（~ 鍵，範例為全形，真正語法需用半形）</div><div class="line"><span class="bullet">2. </span>語法上方，加入 1 個空格，後面可帶入的參數代表的是：程式語言</div><div class="line"><span class="bullet">3. </span>此區塊可以自由運用，所有空格符號都不會被移除。</div><div class="line"><span class="bullet">4. </span>因此可以貼上 Code 而格式不會跑掉。</div><div class="line"><span class="bullet">5. </span>搭配 highlight.js 就可以顯示跟平常 IDE 一樣的顏色。</div><div class="line">｀｀｀</div></pre></td></tr></table></figure>

<hr>
<h3 id="加入連結或圖片">加入連結或圖片</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">加入連結：</div><div class="line">[<span class="link_label">連接名稱</span>](<span class="link_url">url</span>)</div><div class="line">ex: [<span class="link_label">google</span>](<span class="link_url">https://www.google.com.tw</span>)</div><div class="line"></div><div class="line">加入圖片：</div><div class="line">![<span class="link_label">圖片名稱</span>](<span class="link_url">url</span>)</div></pre></td></tr></table></figure>

<p>連結範例：<br><a href="https://www.google.com.tw" target="_blank" rel="external">google</a></p>
<p>圖片範例：<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Markdown-mark.svg/2000px-Markdown-mark.svg.png" alt="Markdown"></p>
<hr>
<h2 id="學習更多_Markdown_語法：">學習更多 Markdown 語法：</h2>
<ul>
<li><a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" target="_blank" rel="external">學習更多 GitHub Markdown</a></li>
<li><a href="https://blue.cse.buffalo.edu/gitlab/help/markdown/markdown.md" target="_blank" rel="external">學習更多 GitLab Markdown</a></li>
<li><a href="http://www.emoji-cheat-sheet.com/" target="_blank" rel="external">加入表情符號 emoji (不一定支援)</a></li>
</ul>
<h2 id="還有其他語法嗎？">還有其他語法嗎？</h2>
<p>還有什麼樣式是你想夾到文件內的嗎？那就直接撰寫 HTML 到文件裡面吧。</p>
<p>因為最後會生成 HTML 檔案 :P</p>
<hr>
<h2 id="即時編輯器">即時編輯器</h2>
<p>初期撰寫 markdown 的時候建議使用具備 <code>所見既所得</code> 的即時編輯器來協助撰寫，同步觀看執行結果。</p>
<p>以下是我推薦的編輯器：</p>
<ul>
<li>IDE<ul>
<li><a href="https://github.com/atom/markdown-preview" target="_blank" rel="external">atom 具備 markdown preview 功能可以設定 github style</a></li>
<li>MacDown (Mac)</li>
</ul>
</li>
<li>web Online editer<ul>
<li><a href="hackmd.io">HackMD 還可生成投影片，推薦使用！</a></li>
<li><a href="https://stackedit.io/editor" target="_blank" rel="external">stackedit</a></li>
</ul>
</li>
<li>CHROME 套件<ul>
<li><a href="https://chrome.google.com/webstore/detail/minimalist-markdown-edito/pghodfjepegmciihfhdipmimghiakcjf?utm_source=chrome-app-launcher-search" target="_blank" rel="external">Minimalist Markdown Editor</a></li>
<li><a href="https://chrome.google.com/webstore/detail/marxico/kidnkfckhbdkfgbicccmdggmpgogehop?utm_source=chrome-ntp-icon" target="_blank" rel="external">馬克飛象 (大陸)</a></li>
</ul>
</li>
</ul>
<h2 id="還可以做什麼_?">還可以做什麼 ?</h2>
<ul>
<li>寫書: <ul>
<li><a href="http://conv.denshochan.com/tw/" target="_blank" rel="external">ePub3</a></li>
<li><a href="https://www.gitbook.com/" target="_blank" rel="external">gitbook</a></li>
</ul>
</li>
<li>寫 Blog<ul>
<li><a href="https://hexo.io/" target="_blank" rel="external">Hexo (本 blog 使用)</a></li>
<li><a href="https://jekyllrb.com/" target="_blank" rel="external">jekyll</a></li>
<li><a href="http://logdown.com/" target="_blank" rel="external">logdown</a></li>
<li><a href="https://en.support.wordpress.com/markdown/" target="_blank" rel="external">wordpress</a></li>
</ul>
</li>
<li>寫投影片 slide<ul>
<li><a href="https://hungjie19.github.io/hexoblog/2016/05/11/HackMD-markdown-x-%E5%85%B1%E7%AD%86-x-slide-x-Doc-%E4%B8%80%E6%AC%A1%E6%BB%BF%E8%B6%B3/" target="_blank" rel="external">HackMD</a></li>
</ul>
</li>
</ul>
<h2 id="好_markdown_不學嗎？">好 markdown 不學嗎？</h2>
<p>試著打一遍，很快就學會了，真的！</p>
<h2 id="Markdown_缺點：">Markdown 缺點：</h2>
<p>Markdown 主要缺點是發佈平台或轉換引擎，發佈 Markdown 有兩種方式一種是直接將撰寫好的文件 push 到平台如 github, fackbook 等支援 Markdown 格式平台，這取決於此平台支援到什麼程度的 Markdown 語法。如：FaceBook 不支援 code block, 外部連結圖片。</p>
<p>另一種既是透過轉換引擎或透過線上轉檔成為最終的 HTML 檔案在散布到網路上，所以會取決於背後轉換的引擎可以解析到什麼 Markdown 語法。</p>
<p>基本上個平台都會說明可以使用的語法，如本文介紹的幾個簡單的用法，其他如: emoji 就比較少支援一點，所以各家的支援度都會有所不同是要注意的地方。</p>
<p>另一個 Markdown 小缺點是 Table 寫起來非常不好閱讀，小型還可以，如果超過 3 欄建議可以直接使用 HTML table 語法<a href="http://www.w3schools.com/html/html_tables.asp" target="_blank" rel="external">參考 w3schools table 範例</a></p>
<p>以上是 Markdown 的小介紹。</p>
<p>你也來寫一個吧！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="what_is_markdown_?">what is markdown ?</h2>
<p><code>Markdown</code> 是一種格式化文件的語言。</p>
<p>一種輕量的標記語言，最終會轉換成 HTML 語法，既可輕易散佈在網路上。</p>
<h3 id="主要優點：">主要優點：</h3>
<ol>
<li>纯文字檔案，任何編輯器可以撰寫。</li>
<li>讓大家<code>不需要</code>學習複雜的 HTML 語法就能夠使用標記語言格式。</li>
<li>語法簡單，易學。</li>
<li>好閱讀，就算沒有轉化成 HTML 語言之前結構也是非常完整的。</li>
<li>甚至已經取代我做筆記的格式。</li>
</ol>
]]>
    
    </summary>
    
      <category term="markdown" scheme="http://hungjie19.github.io/hexoblog/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HackMD markdown x 共筆 x slide x Doc 一次滿足]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2016/05/11/HackMD-markdown-x-%E5%85%B1%E7%AD%86-x-slide-x-Doc-%E4%B8%80%E6%AC%A1%E6%BB%BF%E8%B6%B3/"/>
    <id>http://hungjie19.github.io/hexoblog/2016/05/11/HackMD-markdown-x-共筆-x-slide-x-Doc-一次滿足/</id>
    <published>2016-05-10T17:27:00.000Z</published>
    <updated>2016-05-12T16:39:01.000Z</updated>
    <content type="html"><![CDATA[<!-- 425 355 -->
<p>向大家介紹一個很棒的 markdown 服務：</p>
<h2 id="HackMD"><a href="https://hackmd.io/" target="_blank" rel="external">HackMD</a></h2>
<p><iframe src="https://hackmd.io/p/HkyP-VU-#/" width="425" height="355" frameborder="0" allowfullscreen></iframe></p>
<h2 id="slide_link_click_me!_"><a href="https://hackmd.io/p/HkyP-VU-#/" target="_blank" rel="external">slide link click me! </a></h2>
<p>是的，這份簡報是使用 <code>markdown</code> 編輯的。</p>
<a id="more"></a>
<p>大家應該有使用過 <code>hackpad</code> 這個即時共筆服務。</p>
<p>而今天要推薦的是 <code>HackMD</code> 可以說是加強版。</p>
<h2 id="特色：">特色：</h2>
<ul>
<li>一樣使用 markdown 作為基礎的編輯器，快速排版撰寫文章。</li>
<li>跨平台可以透過 web or app 進行編輯。</li>
<li>多人共同即時協作。</li>
<li>online editer 並提供即時檢視。</li>
<li><a href="https://hackmd.io/AwMwLAxgJhIIYFoBspgLAVgJwYQDiQCYAjBKOKARjEMowGZaIg==" target="_blank" rel="external">可公開文件模式</a></li>
<li><a href="https://hackmd.io/p/HkyP-VU-#/" target="_blank" rel="external">可公開簡報模式</a><ul>
<li>使用 reveal.js</li>
</ul>
</li>
<li>匯出 PDF</li>
<li>匯出 HTML5</li>
</ul>
<p><a href="https://hackmd.io/AwMwLAxgJhIIYFoBspgLAVgJwYQDiQCYAjBKOKARjEMowGZaIg==" target="_blank" rel="external">有興趣可以看一下範例原始碼</a></p>
<hr>
<h2 id="想像一個場景：">想像一個場景：</h2>
<p>身為一個小小工程師平常寫寫 gitlab wiki 文件也是很正常的。<br>忽然有一天主管或同事要你介紹一下你的功能或某個技術的時候..</p>
<ol>
<li>打開 wiki file 貼到 HackMD </li>
<li>只要規劃每一頁 slide 要講什麼內容。<ul>
<li>加上換頁符號。</li>
</ul>
</li>
<li>適時加一些小動畫與圖片。</li>
<li>收工。</li>
</ol>
<p>markdown to slide 對我來說真的是殺手級應用啊～ 太棒了！</p>
<p>推薦適合使用 HackMD 簡報的場景是<a href="https://www.google.com.tw/search?q=%E9%AB%98%E6%A9%8B%E6%B5%81%E7%B0%A1%E5%A0%B1&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;sa=X&amp;ved=0ahUKEwi684u45cTMAhWBjpQKHZsUAo0QsAQIMA&amp;biw=1440&amp;bih=775" target="_blank" rel="external">高橋流簡報</a>或者需要 present <code>code</code> or <code>commend line</code> 可以考慮使用這個服務。</p>
]]></content>
    <summary type="html">
    <![CDATA[<!-- 425 355 -->
<p>向大家介紹一個很棒的 markdown 服務：</p>
<h2 id="HackMD"><a href="https://hackmd.io/" target="_blank" rel="external">HackMD</a></h2>
<p><iframe src="https://hackmd.io/p/HkyP-VU-#/" width="425" height="355" frameborder="0" allowfullscreen></iframe></p>
<h2 id="slide_link_click_me!_"><a href="https://hackmd.io/p/HkyP-VU-#/" target="_blank" rel="external">slide link click me! </a></h2>
<p>是的，這份簡報是使用 <code>markdown</code> 編輯的。</p>
]]>
    
    </summary>
    
      <category term="HackMD" scheme="http://hungjie19.github.io/hexoblog/tags/HackMD/"/>
    
      <category term="markdown" scheme="http://hungjie19.github.io/hexoblog/tags/markdown/"/>
    
      <category term="slide" scheme="http://hungjie19.github.io/hexoblog/tags/slide/"/>
    
      <category term="presentation" scheme="http://hungjie19.github.io/hexoblog/tags/presentation/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[change Hexo theme and test Hexo 3.2 and Blog restart]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2016/05/10/change-Hexo-theme-and-test-Hexo-3.2-and-Blog-restart/"/>
    <id>http://hungjie19.github.io/hexoblog/2016/05/10/change-Hexo-theme-and-test-Hexo-3.2-and-Blog-restart/</id>
    <published>2016-05-10T15:45:01.000Z</published>
    <updated>2016-05-12T16:45:50.000Z</updated>
    <content type="html"><![CDATA[<p>wow 荒廢一陣子的 blog 準備重啟。</p>
<ul>
<li>try to update Hexo 3.2</li>
<li>rollback Hexo 2.8.3</li>
<li>some theme</li>
</ul>
<a id="more"></a>
<p>近期常常在找 Hexo 的 theme 覺得不錯的有：</p>
<h3 id="Hexo_nice_theme:">Hexo nice theme:</h3>
<ul>
<li><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="external">Cho</a><ul>
<li>風格極簡</li>
<li>右邊置頂的火箭很有趣</li>
</ul>
</li>
<li><a href="https://github.com/klugjo/hexo-theme-clean-blog" target="_blank" rel="external">Clean Blog</a><ul>
<li>Ghost 主題風格非常好看</li>
<li>功能簡單夠用</li>
</ul>
</li>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a><ul>
<li>也是極簡風</li>
<li>可依賴多項服務</li>
<li>滿多人使用</li>
</ul>
</li>
</ul>
<p>緣起是發現 Ghost 這個 blug 服務的 Layout 好棒，字體跟間距閱讀起來好舒服，因此朝著： Ghost theme to Hexo 方向就找到了 Clean Blog !! 套用了一下覺得好棒真不錯，可是在首頁列表都是文字，在本機測試幾天後，發現 code highlight 的樣式不是很習慣可能要符合風格因此原生是淡色系的背景色，開始往改變 highlight 顏色開始改功能，不過有點困難.. 然後相依功能少了一點點，但是是非常好的 theme。</p>
<p>接著某天在查資料的時候發現一位部落客使用了 Cho 這個極簡的 theme 眼睛為之一亮，馬上套用看看，也是非常不錯，可能喜歡有圖文的樣式，因此在本機測試一週後就放棄了。</p>
<p>後來看到 NexT 這個滿多人使用的 Hexo theme 多了一個主題風格，所以這個 theme 內建 3 個風格，所以立馬安裝，可是安裝到最後解了一些 bug 發現此 theme 作者推薦還是要升級到 Hexo 3.x 會比較好。</p>
<p>因此原本是使用 Hexo 2.8 版本，剛好想要重啟 blog 也是有想要升級 Hexo 3.x 再加上作者推薦因此升級版本試試看。</p>
<p>一連串的坑就這樣發生，不過很多解決方法 Hexo 作者與 plugin 作者大部分都會在 issue 內寫出解法，大致上是重裝 plugin 或者必須安裝特定某版本才可以。</p>
<p>Hexo 3.x 版本作者推薦要使用 Node.js 4.4.3 版本，且推薦使用 nvm 切換 node 版本，因此也學習到幾個基礎 nvm 語法。</p>
<p>以下列出一些印象比較深刻的坑與 Hexo 各版本注意事項</p>
<h4 id="Hexo_2-8-3_vs_3-2_Plugin">Hexo 2.8.3 vs 3.2 Plugin</h4>
<table>
<thead>
<tr>
<th>Hexo</th>
<th>2.8.3</th>
<th>3.2.x</th>
</tr>
</thead>
<tbody>
<tr>
<td>node.js</td>
<td>12.x</td>
<td>4.4.3</td>
</tr>
<tr>
<td>hexo-renderer-stylus</td>
<td>0.1.0</td>
<td>0.2</td>
</tr>
<tr>
<td>hexo-renderer-marked</td>
<td>0.1.0</td>
<td>0.2</td>
</tr>
<tr>
<td>liveReload 系列</td>
<td>liveReload</td>
<td>hexo-browsersync</td>
</tr>
</tbody>
</table>
<p>最好笑的是裝完 NexT 測試過 3 個風格後.. 我忽然覺得原生的 <code>landscape</code> 還是比較好看耶，當初也是因為看到這個 theme 才知道 Hexo :P</p>
<h2 id="降版之旅">降版之旅</h2>
<p>決定安裝回 Hexo 2.8.3 穩定版，多虧當初有做版控且上傳到 github server </p>
<h3 id="我使用的步驟：">我使用的步驟：</h3>
<ol>
<li>直接刪除 forder 內的 node_modules 所有 plugin</li>
<li>複製 github 上舊的 package.json 內容，貼上。</li>
<li>npm install</li>
<li>nvm use 12.x node version</li>
<li>hexo -v test</li>
<li>hexo g</li>
<li>hexo s</li>
<li>收工，熟悉的感覺真好。</li>
</ol>
<hr>
<h2 id="短期目標：">短期目標：</h2>
<ul>
<li>補上過去幾個月的筆記</li>
<li>嘗試修改 highlight Color</li>
<li>嘗試修改 landscape theme Layout </li>
<li>持續撰寫筆記，幫助記憶<ul>
<li>這行為非常有用，也是重啟 blog 主因。</li>
</ul>
</li>
</ul>
<p>因此開始撰寫筆記吧！</p>
<hr>
<h2 id="reference">reference</h2>
<ul>
<li>hexo-browsersync supposed hexo: 2.8.3 ?<ul>
<li><a href="https://github.com/hexojs/hexo-browsersync/issues/3" target="_blank" rel="external">https://github.com/hexojs/hexo-browsersync/issues/3</a></li>
</ul>
</li>
<li>hexo-renderer-stylus Hexo 3 or 2<ul>
<li><a href="https://github.com/hexojs/hexo-renderer-stylus" target="_blank" rel="external">https://github.com/hexojs/hexo-renderer-stylus</a></li>
<li><a href="https://github.com/zhyu/yaht/issues/1" target="_blank" rel="external">https://github.com/zhyu/yaht/issues/1</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>wow 荒廢一陣子的 blog 準備重啟。</p>
<ul>
<li>try to update Hexo 3.2</li>
<li>rollback Hexo 2.8.3</li>
<li>some theme</li>
</ul>
]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://hungjie19.github.io/hexoblog/tags/Hexo/"/>
    
      <category term="blog" scheme="http://hungjie19.github.io/hexoblog/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Protractor install and Start Testing]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/12/10/Protractor-install-and-Start-Testing/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/12/10/Protractor-install-and-Start-Testing/</id>
    <published>2015-12-09T16:30:28.000Z</published>
    <updated>2016-05-05T17:37:48.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.protractortest.org" target="_blank" rel="external">Protractor</a> 是一套 End-to-End Test Framework</p>
<ul>
<li>可模擬使用者在瀏覽器上面的使用情境</li>
<li>AngularJS 官方推薦使用的測試 Framework</li>
<li>包含 <a href="http://webdriver.io/" target="_blank" rel="external">WebDriverJS</a></li>
<li>包含 <a href="http://www.seleniumhq.org/" target="_blank" rel="external">Selenium</a></li>
<li>預設使用 <a href="http://jasmine.github.io/" target="_blank" rel="external">Jasmine</a> 斷言庫</li>
</ul>
<a id="more"></a>
<blockquote>
<p>斷言 - 網路上的定義<br>在程序設計中，斷言是一種放在程序中的一階邏輯，目的是為了標示與驗證程序開發者預期的結果－當程序運行到斷言的位置時，對應的斷言應該為真。若斷言不會真時，程序會中止運行，並出現錯誤信息。</p>
</blockquote>
<h2 id="開始之前">開始之前</h2>
<p>Protractor 必須執行在 <a href="http://nodejs.org/download/" target="_blank" rel="external">nodeJS</a> 環境下，因此必須安裝 <a href="http://nodejs.org/download/" target="_blank" rel="external">nodeJS</a> 後才可以執行以下安裝步驟：</p>
<hr>
<h2 id="step_1">step 1</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> -g protractor</span></div></pre></td></tr></table></figure>

<h2 id="step_2">step 2</h2>
<p>此步驟為更新/下載: <code>chromedriver.exe</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webdriver-manager <span class="keyword">update</span></div></pre></td></tr></table></figure>

<h4 id="Windows_安裝路徑：">Windows 安裝路徑：</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:<span class="command">\Users</span><span class="command">\你</span>的帳號<span class="command">\AppData</span><span class="command">\Roaming</span><span class="command">\npm</span><span class="command">\node</span>_modules<span class="command">\protractor</span><span class="command">\selenium</span></div></pre></td></tr></table></figure>

<h3 id="step_3">step 3</h3>
<p>此步驟為更新/下載: <code>selenium-server-standalone-2.48.2.jar</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webdriver-manager <span class="operator"><span class="keyword">start</span></span></div></pre></td></tr></table></figure>

<h3 id="step_4_測試">step 4 測試</h3>
<p>使用內建測試（目標 angularJS 官網首頁的範例檔）<br>移動到：<code>example</code>資料夾</p>
<h4 id="Windows_安裝路徑：-1">Windows 安裝路徑：</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd C:<span class="command">\Users</span><span class="command">\你</span>的帳號<span class="command">\AppData</span><span class="command">\Roaming</span><span class="command">\npm</span><span class="command">\node</span>_modules<span class="command">\protractor</span><span class="command">\example</span></div></pre></td></tr></table></figure>

<h3 id="step_5_啟動">step 5 啟動</h3>
<ul>
<li>windows 需到 PATH 增加環境變數<ul>
<li>增加 JDK 安裝後的執行檔路徑</li>
</ul>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">protractor <span class="keyword">conf</span>.js</div></pre></td></tr></table></figure>

<p>enjoy !</p>
<h2 id="Reference:">Reference:</h2>
<ul>
<li><a href="http://www.protractortest.org" target="_blank" rel="external">http://www.protractortest.org</a></li>
<li><a href="https://www.facebook.com/notes/paul-li/protractor-%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E7%AF%87/10152948608982211" target="_blank" rel="external">https://www.facebook.com/notes/paul-li/protractor-%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A%E7%AF%87/10152948608982211</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.protractortest.org" target="_blank" rel="external">Protractor</a> 是一套 End-to-End Test Framework</p>
<ul>
<li>可模擬使用者在瀏覽器上面的使用情境</li>
<li>AngularJS 官方推薦使用的測試 Framework</li>
<li>包含 <a href="http://webdriver.io/" target="_blank" rel="external">WebDriverJS</a></li>
<li>包含 <a href="http://www.seleniumhq.org/" target="_blank" rel="external">Selenium</a></li>
<li>預設使用 <a href="http://jasmine.github.io/" target="_blank" rel="external">Jasmine</a> 斷言庫</li>
</ul>
]]>
    
    </summary>
    
      <category term="Protractor" scheme="http://hungjie19.github.io/hexoblog/tags/Protractor/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TaiwanLeft 不只是簡報 week4 簡報設計之五星級 筆記]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/12/08/TaiwanLeft-%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1-week4-%E7%AD%86%E8%A8%98/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/12/08/TaiwanLeft-不只是簡報-week4-筆記/</id>
    <published>2015-12-07T16:36:09.000Z</published>
    <updated>2016-05-21T17:49:03.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>簡報設計之五星級</li>
<li>簡報個案分享與分析</li>
<li>不想用 excel 製作圖表</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
<a id="more"></a>
<h2 id="美好">美好</h2>
<p>設計，為人生帶來一份美好。</p>
<p>沒設計過的房子的確可以住人，但是設計過的房子卻多了一份美好。</p>
<p>為什麼做簡報？為什麼做設計？讓無趣的人生多的一份美好。</p>
<p>不只是簡報這門課，不是真的要你學習設計不需要知道艱深的學問，如色彩學，是針對半個設計人，強調設計本身的效能 :)</p>
<h2 id="簡報設計之五星級">簡報設計之五星級</h2>
<p>我們將投影片分成<code>五</code>個等級</p>
<p>今天如果我們要出去旅遊，我們會上網搜尋飯店的評價 1~5 顆星，</p>
<p>但是再決定要住哪間飯店的時候，會因為幾個條件而有差異：</p>
<ul>
<li>會因為這特旅程的重要性</li>
<li>會因為這特旅程的規劃時間</li>
</ul>
<p>因此會因為條件不同而左右我們最後下訂房間</p>
<blockquote>
<p>製作簡報也是如此，會因為我們今天要簡報的<br>場合不同，<br>對象不同，<br>製作時間不同，<br>而左右我們製作簡報質量。</p>
</blockquote>
<ul>
<li>零星級<ul>
<li>word 版簡報</li>
<li>複製貼上..</li>
<li>字太小</li>
<li>失去說的意義 (照著念)</li>
</ul>
</li>
<li>一星級<ul>
<li>摘要關鍵字</li>
<li>條列式重點</li>
<li>改寫內容</li>
</ul>
</li>
<li>二星級 ( 1 ~ 2 CP 值最高)<ul>
<li>加入色塊</li>
<li>凸顯出<code>關鍵字</code> (顏色、大小、字型)</li>
<li>希望<code>至少做到二星級</code></li>
</ul>
</li>
<li>三星級<ul>
<li>加入圖形、圖表</li>
<li>包含簡單 layout</li>
<li>對比色塊</li>
</ul>
</li>
<li>四星級<ul>
<li>善用圖案、影像</li>
<li>具現化你想傳達的觀念</li>
<li>ex: 廁所（人物 icon）</li>
<li>ex: show 漫畫影像，馬上連結到你可能想講與動畫有關的議題</li>
</ul>
</li>
<li>五星級<ul>
<li>後續課堂補充</li>
</ul>
</li>
</ul>
<h3 id="非一般性簡報內容">非一般性簡報內容</h3>
<ul>
<li>抓住連結<ul>
<li>簡報的當下如何快速地抓住觀眾與你的簡報做連結</li>
</ul>
</li>
<li>全面性</li>
</ul>
<h2 id="簡報個案分享與分析：">簡報個案分享與分析：</h2>
<h3 id="設計力之個案(1)_簡報_-_快速鍵">設計力之個案(1) 簡報 - 快速鍵</h3>
<ul>
<li>如何簡報<code>快速鍵</code></li>
<li>簡報者訊息分類</li>
<li>歸類簡報內容</li>
<li>分類（一等星）</li>
<li>加上色塊(二等星)</li>
<li>運用圖表與色塊分類（三等星）</li>
<li>運用視覺化分類與 icon（四等星）</li>
<li>將使用情境與資訊做結合（五等星）</li>
</ul>
<h3 id="設計力之個案(2)_簡報_-_劇作家生平">設計力之個案(2) 簡報 - 劇作家生平</h3>
<ul>
<li>時間軸概念</li>
<li>生平大事<ul>
<li>愛情（粉紅色）</li>
<li>工作（紫色）</li>
<li>居住環境（灰色）</li>
<li>利用區塊大小凸顯事情重要性</li>
</ul>
</li>
<li>創作集<ul>
<li>可以根據以上排列出創作及圖表</li>
</ul>
</li>
<li>綜合以上兩張圖表可以看出一些關聯<ul>
<li>如愛情與創作數量之間的關係</li>
<li>居住地與創作故事之間的關係</li>
</ul>
</li>
</ul>
<h3 id="設計力之個案(3)_簡報_-_統合資料向廠商報告">設計力之個案(3) 簡報 - 統合資料向廠商報告</h3>
<ul>
<li>開會紀錄變成關鍵字加入色塊與圖表</li>
<li>具現化記錄圖像</li>
<li>已經有不錯的簡報設計，希望更聚焦的闡述設計理念</li>
<li>需要<code>設計示意圖</code></li>
<li>有時間可以製作 prototype</li>
<li>程式設計 -&gt; 用圖像流程表現功能與結果</li>
</ul>
<h3 id="設計力之個案(4)_簡報_-_研究：現在教育與未來教育">設計力之個案(4) 簡報 - 研究：現在教育與未來教育</h3>
<table>
<thead>
<tr>
<th></th>
<th>現在教育</th>
<th>未來教育</th>
</tr>
</thead>
<tbody>
<tr>
<td>感受</td>
<td>負面</td>
<td>正面</td>
</tr>
<tr>
<td>顏色</td>
<td>褐色</td>
<td>黃色</td>
</tr>
</tbody>
</table>
<h2 id="不想用_excel_製作圖表">不想用 excel 製作圖表</h2>
<p>利用網路資訊製作</p>
<ul>
<li>Easel.ly</li>
<li>Creately</li>
</ul>
<blockquote>
<p>上網製作非常耗時，須重新學習，可能有轉檔的問題</p>
</blockquote>
<p>製作資訊圖表耗時！</p>
<ul>
<li>直接在PPT上直接畫算了！<ul>
<li>搞不好是的好方法！！</li>
</ul>
</li>
<li>長條圖如何改變呈現方式？<ul>
<li>圓形點陣圖，將明度彩度相同的放一起</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>簡報設計之五星級</li>
<li>簡報個案分享與分析</li>
<li>不想用 excel 製作圖表</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
]]>
    
    </summary>
    
      <category term="TaiwanLeft" scheme="http://hungjie19.github.io/hexoblog/tags/TaiwanLeft/"/>
    
      <category term="presentation" scheme="http://hungjie19.github.io/hexoblog/tags/presentation/"/>
    
      <category term="不只是簡報" scheme="http://hungjie19.github.io/hexoblog/tags/%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[高雄前端社群#21 - React Party]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/12/06/%E9%AB%98%E9%9B%84%E5%89%8D%E7%AB%AF%E7%A4%BE%E7%BE%A4-21-React-Party/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/12/06/高雄前端社群-21-React-Party/</id>
    <published>2015-12-06T07:30:39.000Z</published>
    <updated>2016-05-21T18:01:33.000Z</updated>
    <content type="html"><![CDATA[<h2 id="React_Native_開發分享_-_子駿">React Native 開發分享 - 子駿</h2>
<h3 id="Hybrid_app_?">Hybrid app ?</h3>
<ul>
<li>Easy to Start!</li>
<li>現實總是沒有這麼好</li>
<li>效能低</li>
<li>用電量高</li>
<li>life cycle</li>
<li><code>開發者</code>很開心、<code>使用者</code>很不開心</li>
</ul>
<a id="more"></a>
<h2 id="React_Native_?">React Native ?</h2>
<ul>
<li>用 JS 操控 iOS / Android 原生 view</li>
<li>不是 React 版 mobile UI Framework</li>
<li>原生能做什麼你就可做什麼</li>
<li>官方沒給的 UI 怎麼辦？ <ul>
<li>自己 UI 自己包</li>
</ul>
</li>
<li>Learn Once，Write anywhere<ul>
<li>學一次<code>寫</code>到各個地方</li>
</ul>
</li>
<li>其實 FaceBook 布這個局非常久了</li>
<li>codepush (microsoft)<ul>
<li>動態更新 app 的 JavaScript file 等同於更新 app</li>
</ul>
</li>
<li>可以擁有幾乎和原生相同的擴充性<ul>
<li>可局部開發 React Native</li>
<li>天貓 app 正在一頁一頁換掉 iOS Native</li>
<li>1111 光棍節正實驗性透過分析丟給使用者不同的 Layout 畫面，提供更適合使用者的 UX 畫面提升交易量</li>
</ul>
</li>
<li>社群強大<ul>
<li>ReactNativeNews</li>
</ul>
</li>
<li>React 0.14 以上已經趨於穩定版本（甚至 15.x FaceBook 已經認為是穩定版）</li>
<li>FaceBook 程式寫得好，文件寫得少<ul>
<li><code>#社群力量派上用場</code>、 <code>#人多勢眾</code>、 <code>#工程師多交流</code>、 <code>#英文要夠強</code></li>
</ul>
</li>
<li>學習曲線相較低</li>
</ul>
<h2 id="React_Native_vs_Cordova">React Native <code>vs</code> Cordova</h2>
<table>
<thead>
<tr>
<th>-</th>
<th>React Native</th>
<th>Cordova</th>
</tr>
</thead>
<tbody>
<tr>
<td>學習</td>
<td>初期：高，中後期：易</td>
<td>易（如果你本來就寫 web）</td>
</tr>
<tr>
<td>開發</td>
<td>初期陣痛，日後不變</td>
<td>隨時間與專案變高</td>
</tr>
<tr>
<td>體驗</td>
<td>高</td>
<td>低</td>
</tr>
<tr>
<td>第三方</td>
<td>只能用純 JS Lib</td>
<td>web plugin 多數可使用</td>
</tr>
<tr>
<td>效能極限</td>
<td>無極限（除非原生不支援）</td>
<td>低（看 Cordova 支援程度）</td>
</tr>
</tbody>
</table>
<h2 id="React_Native_vs_Native">React Native <code>vs</code> Native</h2>
<table>
<thead>
<tr>
<th>-</th>
<th>React Native</th>
<th>Native</th>
</tr>
</thead>
<tbody>
<tr>
<td>學習</td>
<td>易</td>
<td>高</td>
</tr>
<tr>
<td>開發</td>
<td>易</td>
<td>高</td>
</tr>
<tr>
<td>體驗</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>第三方</td>
<td>只能用純 JS Lib</td>
<td>多</td>
</tr>
<tr>
<td>app 更新</td>
<td>快（更新 server）</td>
<td>慢（最快兩週？）</td>
</tr>
</tbody>
</table>
<h2 id="real_worde_showcase">real worde showcase</h2>
<ul>
<li>FaceBook 正在部分把元件轉移成 React Native</li>
<li>根據不同user 給他不同的頁面</li>
<li>專案進度太快，兩週一次更新</li>
<li>0.14 以上已經趨於穩定版本</li>
<li>程式寫得很好，文件寫得很少</li>
<li>android 版本不夠成熟</li>
<li>沒辦法使用大部份 lib，因為 webAPI</li>
</ul>
<h2 id="Q&amp;A">Q&amp;A</h2>
<ol>
<li>Bulid Android apk 檔案壓縮出來非常肥大？<ul>
<li>已知 issue FB 解決中</li>
</ul>
</li>
<li>IDE 如何選擇？<ul>
<li>FB 之前決定開發 nuclide 可以一套打全部（部分開發）</li>
<li>講者目前開發還是開三套 IDE..</li>
<li>SublimeText</li>
<li>Xcode</li>
<li>Android Studio</li>
</ul>
</li>
<li>如何選擇 ReactJS 版本？<ul>
<li>目前最新版本 -2 or 3..XD</li>
</ul>
</li>
<li>如何做到更新 app 版本？<ul>
<li>開啟 app 檢查彈出更新，下載新的JS</li>
<li>app.js 放在 server USER 開啟 app 絕對是最新的（無法離線..） </li>
<li>更新 server =&gt; app Hub</li>
</ul>
</li>
<li>iOS / andriod 工程師會失業嗎？<ul>
<li>絕對不會</li>
<li>非原生 UI 自己刻</li>
<li>最新的 UI 自己刻 ex: iOS 9 3D Touch</li>
</ul>
</li>
<li>React 可以用其他 JavaScript lib ?<ul>
<li>大部份無法</li>
<li>上 npm 找</li>
</ul>
</li>
</ol>
<hr>
<h2 id="備註：">備註：</h2>
<ul>
<li>miss 上半場簡介 ReactJS 基礎介紹 Orz..</li>
<li>筆記有錯請指正 O_o”</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="React_Native_開發分享_-_子駿">React Native 開發分享 - 子駿</h2>
<h3 id="Hybrid_app_?">Hybrid app ?</h3>
<ul>
<li>Easy to Start!</li>
<li>現實總是沒有這麼好</li>
<li>效能低</li>
<li>用電量高</li>
<li>life cycle</li>
<li><code>開發者</code>很開心、<code>使用者</code>很不開心</li>
</ul>
]]>
    
    </summary>
    
      <category term="workshop" scheme="http://hungjie19.github.io/hexoblog/tags/workshop/"/>
    
      <category term="ReactJS" scheme="http://hungjie19.github.io/hexoblog/tags/ReactJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angularJS ng-show ng-hide and $scope string = yes, no, on, off]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/12/02/AngularJS-ng-show-ng-hide-and-scope-string-yes-no-on-off/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/12/02/AngularJS-ng-show-ng-hide-and-scope-string-yes-no-on-off/</id>
    <published>2015-12-02T12:11:52.000Z</published>
    <updated>2015-12-02T13:03:43.000Z</updated>
    <content type="html"><![CDATA[<p>今天下午踩到一個 angularJS 神奇坑洞，事情是這樣滴當 $scope 內容為 string <code>YES</code> 的時候 ng-show 遽然不會動作 O_o”</p>
<a id="more"></a>
<p>sample Code:</p>
<h4 id="in_controller">in controller</h4>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$scope.test = <span class="string">'yes'</span>;</div></pre></td></tr></table></figure>

<h4 id="in_HTML">in HTML</h4>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">ng-show</span>=<span class="value">"test"</span>&gt;</span>test!<span class="tag">&lt;/<span class="title">span</span>&gt;</span></div></pre></td></tr></table></figure>

<p>ng-show 裡面綁定 $scope.test 並存在 value: ‘yes’, 為什麼 <span> 卻不會 show 哩？</span></p>
<hr>
<p>以下是一連串的實驗與驗證： </p>
<h3 id="DEMO:_(可以切換右邊_Code_觀看_source_Code)">DEMO: (可以切換右邊 <code>Code</code> 觀看 source Code)</h3>
<iframe class="plunk-preview" src="http://embed.plnkr.co/7S0UIpCvPGZ07SrspcY5/" width="100%" height="800px" frameborder="0"></iframe>

<h4 id="範例1-_$scope-test2_=_‘NOO’">範例1. $scope.test2 = ‘NOO’</h4>
<p>ng-show 可以正常判斷 test2 存在 value 因此顯示 <span></span></p>
<h4 id="範例2-_$scope-test_=_‘NO’">範例2. $scope.test = ‘NO’</h4>
<p>ng-show 無法判斷 test 轉型 boolean </p>
<h4 id="範例3-_測試_$scope-test_?_‘true’_:_‘false’;">範例3. 測試 $scope.test ? ‘true’ : ‘false’;</h4>
<p>透過簡單的 if else 測試 test 是否有 value?<br>結果是<code>true</code> O_o”</p>
<h4 id="範例4-_在_ng-show_當中加入判斷">範例4. 在 ng-show 當中加入判斷</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ng-<span class="literal">show</span> = <span class="string">"test ? true : false"</span></div></pre></td></tr></table></figure>

<p>結果：可以正常顯示</p>
<p>因此向許多前輩請教後發現 AngularJS 將:</p>
<ul>
<li><code>Yes</code> 視為 true</li>
<li><code>No</code> 視為 false</li>
</ul>
<p>O_o”</p>
<p>在下面的 more test 範例將測試 <code>ng-show</code> 與 <code>ng-hide</code>在  $scope 變數內容為 string: yes, no, on, off 的小實驗。<br>實驗後 on, off 結果還是怪怪的，可能還要看下文章..</p>
<h2 id="小結：">小結：</h2>
<ul>
<li>踩雷真的好好玩 O_o” </li>
<li>盡量避開使用語意化的變數內容: yes, no, on, off (已知)</li>
</ul>
<h1 id="Reference:">Reference:</h1>
<p>印象在學習 angularJS 初期有看過類似文章，可是一時找不到..日後補上哩 ^_^</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天下午踩到一個 angularJS 神奇坑洞，事情是這樣滴當 $scope 內容為 string <code>YES</code> 的時候 ng-show 遽然不會動作 O_o”</p>
]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://hungjie19.github.io/hexoblog/tags/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TaiwanLeft 不只是簡報 week3 筆記]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/12/02/TaiwanLeft-%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1-week3-%E7%AD%86%E8%A8%98/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/12/02/TaiwanLeft-不只是簡報-week3-筆記/</id>
    <published>2015-12-01T16:36:09.000Z</published>
    <updated>2016-05-21T17:13:39.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>規劃力之 1 - 方向</li>
<li>規劃力之 2 - 架構</li>
<li>規劃力之 3 - 內容</li>
<li>規劃力之 4 - 呈現</li>
<li>Prezi 軟體介紹</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
<a id="more"></a>
<h2 id="規劃力之1_方向">規劃力之1 方向</h2>
<p>疑問簡報的定義是什麼？</p>
<ul>
<li>要有圖片文？</li>
<li>要用 PPT 做才是簡報？</li>
<li>要有很多動畫特效？</li>
</ul>
<blockquote>
<p>簡報的核心關鍵：內容！</p>
</blockquote>
<p>對我來說簡報就像寫作、畫圖、作曲一樣..是一種溝通形式。</p>
<p>竟然是溝通形式的話..你要告訴別人什麼<code>內容</code>才是最重要的！</p>
<h3 id="溝通都會有目的性！">溝通都會有<strong>目的性</strong>！</h3>
<ul>
<li>讓人理解</li>
<li>讓對方接受</li>
<li>令別人內化</li>
<li>產生行動</li>
</ul>
<blockquote>
<p>有目的的溝通：為了說服！</p>
</blockquote>
<h4 id="舉例有目的的溝通：">舉例有目的的溝通：</h4>
<ul>
<li>簡報講師:<ul>
<li>用我的方式來做一個好的簡報</li>
</ul>
</li>
<li>政治人物:<ul>
<li>演講是為了希望選民把票投給他。</li>
</ul>
</li>
<li>賈伯斯:<ul>
<li>發表會是為了說服大家 apple 的產品是最美好的。</li>
</ul>
</li>
</ul>
<h3 id="簡報目的：">簡報目的：</h3>
<ul>
<li>理解</li>
<li>行動</li>
<li>改變</li>
</ul>
<blockquote>
<p>有了目的還不夠，必須<code>瞭解聽眾</code>的對象是什麼?</p>
</blockquote>
<h4 id="簡報目的舉例：">簡報目的舉例：</h4>
<ul>
<li>政治人物<ul>
<li>不可能對小朋友演講，因為小朋友沒有投票權。</li>
</ul>
</li>
<li>賈伯斯<ul>
<li>不可能也不會像老爺爺推薦 iPhone</li>
</ul>
</li>
</ul>
<h3 id="聽眾目標對象：">聽眾目標對象：</h3>
<ul>
<li>背景</li>
<li>在意什麼 (重點)<ul>
<li>敘述簡報前，推測對方的想法</li>
</ul>
</li>
<li>影響</li>
</ul>
<h4 id="聽眾目標在意什麼舉例：">聽眾目標在意什麼舉例：</h4>
<ul>
<li>投遞企劃履歷（壞案例）<ul>
<li>我家有爸爸媽媽一個哥哥一個姊姊兩隻狗 @#$%^&amp;-…</li>
<li>很顯然面試官不會因為你家有誰而入取你</li>
<li>提供別人不需要的資訊</li>
</ul>
</li>
<li>投遞企劃履歷（參考）<ul>
<li>提出類似經驗</li>
<li>提出相關經驗</li>
<li>展現熱誠與企圖心</li>
<li>證明發展淺力</li>
<li>提供別人需要的資訊    </li>
</ul>
</li>
<li>提出對方不知道，應該在意的事情（轉個彎思考）<ul>
<li>飲料店需要手腳俐落，身手敏捷的員工</li>
<li>自己手腳不是很快不太敏捷</li>
<li>提出記憶力很好可以節省時間做好所有訂單</li>
<li>因為記憶力好可以解決出餐速度問題 ＝ 敏捷</li>
<li>展現機智，證明自己。</li>
</ul>
</li>
</ul>
<h3 id="簡報是個旅程">簡報是個旅程</h3>
<ul>
<li>對象是起點</li>
<li>目的是終點</li>
<li>必須帶領聽眾從起點走到終點</li>
<li>釐清起點與終點才可以勾勒出簡報的方向</li>
<li>對象不同陳述內容也不同</li>
</ul>
<h4 id="假設你要推廣游泳運動">假設你要推廣游泳運動</h4>
<ul>
<li>對象：在意自己身材<ul>
<li>強調游泳可以雕朔身材看起來更均勻</li>
</ul>
</li>
<li>對象：準備當兵<ul>
<li>強調學會游泳在部隊中的好處：可以提早放假，很多時間可以休息</li>
</ul>
</li>
<li>假設你要介紹：霧霾<ul>
<li>每天都暴露在 PM 2.5 之下</li>
<li>對下一代有什麼影響</li>
</ul>
</li>
<li>掌握<ul>
<li>創造聽眾的在意點</li>
<li>尋找共同的在意點</li>
</ul>
</li>
</ul>
<blockquote>
<p>對象是起點<br>目的是終點<br>掌握了三點就掌握了說服的基本原則<br>簡報的旅程才算是正式的踏出了第一步</p>
</blockquote>
<h2 id="規劃力之2_架構">規劃力之2 架構</h2>
<ul>
<li>太多重點</li>
<li>網狀脈絡 -&gt; 線性脈絡</li>
<li>釐清線性脈絡<ul>
<li>根據時間發展</li>
<li>從巨觀到微觀</li>
<li>論證分析事件</li>
</ul>
</li>
</ul>
<h3 id="小紅帽故事舉例：">小紅帽故事舉例：</h3>
<ul>
<li>時間軸<ol>
<li>小紅帽探望奶奶</li>
<li>野狼吞到小紅帽</li>
<li>獵人救了小紅帽</li>
<li>野狼死了</li>
</ol>
</li>
<li>時間軸變形<ol>
<li>野狼死了<ul>
<li>聽眾疑問為什麼？誰殺的？</li>
</ul>
</li>
<li>小紅帽探望奶奶<ul>
<li>野狼是被他們兩個其中之一殺死的嗎？</li>
</ul>
</li>
<li>野狼吞到小紅帽<ul>
<li>原來野狼是壞人！奶奶怎麼救小紅帽的？或者有別人搭救？</li>
</ul>
</li>
<li>獵人救了小紅帽<ul>
<li>原來是遇到獵人出手相救！！</li>
</ul>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>變形的好處可以吧主角是不是野狼大野狼<br>一開始既破題指出大野狼死掉了！<br>觀眾也許會疑問說，為什麼大野狼為什麼會死？<br>接著時間轉移到小紅帽為什麼出門因為要去探望奶奶</p>
<blockquote>
<p>舉例時間軸範例電影：超時空攔截（2014）</p>
</blockquote>
</blockquote>
<h4 id="從巨觀到微觀">從巨觀到微觀</h4>
<ol>
<li>趨勢全國 70% 都在使用智慧手機</li>
<li>在分地區比例</li>
<li>再分年齡比例</li>
</ol>
<h4 id="介紹拍賣平台">介紹拍賣平台</h4>
<ul>
<li>買家與賣家</li>
<li>物流與金流</li>
</ul>
<h4 id="從微觀到巨觀">從微觀到巨觀</h4>
<ol>
<li>20 年傳統夜市人潮流失</li>
<li>隔壁小夜市人潮卻暴增</li>
<li>發現小夜市兩條街口外有捷運出口造成人潮改變</li>
<li>因為人潮改變進而改變市場結構。</li>
</ol>
<blockquote>
<p>從微觀案例觀察它的變化，進而發現問題，再從問題看到更宏觀的角度，開拓聽眾分析事情角度的視野。</p>
</blockquote>
<h3 id="論證分析事件">論證分析事件</h3>
<ul>
<li>目的：改變公司加班制度</li>
<li>對象：老闆</li>
<li>方向：利潤</li>
</ul>
<h3 id="論證分析舉例：">論證分析舉例：</h3>
<p>新任主管發現很多人加班，但公司績效卻不如預期？</p>
<p>舉出：日本同業某公司營收暴增，卻沒有做任何新產品或合併！（那他做了什麼？）</p>
<p>老闆宣布修改取消加班費機制政策，改為績效獎勵機制！</p>
<p>半年後發現，上班的時候每個人充滿幹勁把效率發揮到最高，鼓勵做得好、做得多的員工，而不是工作做很久一直加班的員工。</p>
<p>再舉出：有個類似的公司，有一個人才出走了，因為老闆只看到加班最多人認為他最努力..。</p>
<blockquote>
<p>實作小技巧：<br>再開始製作PPT的時候只寫上標題重點，開始排序，直到釐清脈絡在開始詳細每個章節。</p>
</blockquote>
<h2 id="規劃力之3_內容">規劃力之3 內容</h2>
<p>穹頂之下 - 柴靜</p>
<ul>
<li>目的：呼籲聽眾防治污染</li>
<li>架構：我們每天都接觸 PM2.5 對下一代有負面影響</li>
<li>內容：用自己角度陳述</li>
</ul>
<p>懷疑自己小孩患有良性腫瘤</p>
<p>史丹佛大學演講 - 賈伯斯</p>
<ul>
<li>故事 - 創辦蘋果電腦 被解雇</li>
<li>啟示 - 相信這是自己熱愛的事</li>
<li>行動 - 進了兩間公司最後返回蘋果</li>
<li>成果 - 帶領頻果電腦創造新高峰</li>
<li>啟示 - 呼籲聽眾不要放棄熱愛的事</li>
</ul>
<blockquote>
<p>引發啟示<br>先架構在內容</p>
</blockquote>
<h2 id="規劃力之4_呈現">規劃力之4 呈現</h2>
<p>簡報畫面，聽眾感知</p>
<p>簡報內有什麼重點，需要被知道的表現方式</p>
<p>用聽的無法理解</p>
<p>如：數據，畫面</p>
<ul>
<li>who/what :誰、大小</li>
<li>how much: 數量：圖表</li>
<li>where: 位置：關聯、結構、組合、對立</li>
<li>when: 時間性：序列、週期性</li>
<li>how: 步驟性：如果</li>
<li>why: 分析性：為什麼有這樣的結果</li>
</ul>
<h3 id="講師簡報呈現案例分享">講師簡報呈現案例分享</h3>
<ul>
<li>時間順序 <ul>
<li>介紹可汗學院</li>
</ul>
</li>
<li>巨觀到微觀<ul>
<li>當新聞不再新<ul>
<li>引用分析：現在人的獲取資訊的管道與以前不同，發現趨勢</li>
<li>細部分析個案族群獲取資訊的管道</li>
</ul>
</li>
<li>數位掀浪<ul>
<li>Borders</li>
</ul>
</li>
</ul>
</li>
<li>論證形式<ul>
<li>單字強力教 APP</li>
<li>單字學習的邏輯</li>
<li>分析現有 app 學習流程</li>
<li>得出學習結論</li>
</ul>
</li>
</ul>
<h4 id="當你完成四個簡報的內容呈現方式:">當你完成四個簡報的內容呈現方式:</h4>
<ul>
<li>方向</li>
<li>架構</li>
<li>內容</li>
<li>呈現</li>
</ul>
<h3 id="得到草稿簡報具有">得到草稿簡報具有</h3>
<ul>
<li>完整架構</li>
<li>內容重點</li>
<li>轉折細節</li>
</ul>
<blockquote>
<p>開始正式簡報製作</p>
</blockquote>
<h2 id="Prezi_軟體介紹">Prezi 軟體介紹</h2>
<p>簡報製作軟體並不是只有 PPT、Keynote</p>
<ul>
<li>Flash 線上編輯器</li>
<li>將所有內容在一個畫面上編輯</li>
<li>可直接在編輯器內搜尋圖彖直接拖曳</li>
<li>內建多個 icon</li>
<li>可自訂顯示框架，呈現範圍</li>
<li>自動計算移動位置與轉場效果</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>規劃力之 1 - 方向</li>
<li>規劃力之 2 - 架構</li>
<li>規劃力之 3 - 內容</li>
<li>規劃力之 4 - 呈現</li>
<li>Prezi 軟體介紹</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
]]>
    
    </summary>
    
      <category term="TaiwanLeft" scheme="http://hungjie19.github.io/hexoblog/tags/TaiwanLeft/"/>
    
      <category term="presentation" scheme="http://hungjie19.github.io/hexoblog/tags/presentation/"/>
    
      <category term="不只是簡報" scheme="http://hungjie19.github.io/hexoblog/tags/%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TaiwanLeft 不只是簡報 week2 筆記]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/11/30/TaiwanLeft-%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1-week2-%E7%AD%86%E8%A8%98/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/11/30/TaiwanLeft-不只是簡報-week2-筆記/</id>
    <published>2015-11-30T12:54:59.000Z</published>
    <updated>2016-05-21T16:38:47.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>製作簡報花費時間<ul>
<li>準備</li>
<li>設計</li>
<li>呈現</li>
</ul>
</li>
<li>Story Telling 說故事</li>
<li>簡報達人推薦</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
<a id="more"></a>
<h2 id="製作簡報花費時間">製作簡報花費時間</h2>
<p>Garr Raynolds 說簡報三階段：</p>
<ul>
<li>準備</li>
<li>設計</li>
<li>呈現</li>
</ul>
<h2 id="準備">準備</h2>
<p>最耗時</p>
<ul>
<li>Nancy Duarte:<ul>
<li>準備 30 張投影片，需花費36-90小時</li>
</ul>
</li>
<li>韓明文：<ul>
<li>準備一場 TED 等級簡報</li>
<li>一分鐘的演說時間，至少要花費10小時準備</li>
<li>台上一分鐘，台下十小時</li>
</ul>
</li>
<li>Garr Raynolds:<ul>
<li>star the end in mind</li>
<li>開始你的簡報</li>
<li>從結束開始</li>
</ul>
</li>
<li>Garr Raynolds:<ul>
<li>開始思考觀眾在離開時候會帶走什麼獲得什麼？</li>
</ul>
</li>
<li>韓明文：<ul>
<li>人生的規劃是從告別式開始</li>
<li>簡報的規劃就從結束開始</li>
<li>人沒有終點，就沒有起點</li>
</ul>
</li>
</ul>
<blockquote>
<p>準備 - 設立目標</p>
</blockquote>
<p>聽眾不太能接受只是告知、簡介型的簡報</p>
<h3 id="聽眾在乎：">聽眾在乎：</h3>
<ul>
<li>給他感動</li>
<li>行為改變換起行動</li>
</ul>
<p>世界上<code>不存在告知型的簡報</code></p>
<p>只有</p>
<p><code>能喚起</code>行動的簡報，</p>
<p><code>沒有喚起</code>行動的簡報<br>by 韓明文</p>
<blockquote>
<p>把你的簡報變成 動詞</p>
</blockquote>
<h3 id="了解你的觀眾：">了解你的觀眾：</h3>
<ul>
<li>用他們的語言</li>
<li>他們的溝通</li>
<li>跟他們做簡報</li>
</ul>
<h4 id="關於內容：">關於內容：</h4>
<ul>
<li>塞入所有訊息（Ｘ）</li>
<li>Keep is simple</li>
<li>Less is more</li>
<li>說給誰聽？看透事物本質多的！</li>
<li>Less is bored （少卻很無聊）</li>
<li>因為簡報者無法看透事物的本質（抓到重點）所以呈現出來的簡報無法聚焦聽眾的目光</li>
<li>傳遞核心訊息</li>
</ul>
<h4 id="工具幫助：">工具幫助：</h4>
<ul>
<li>紙筆</li>
<li>便利貼</li>
<li>白板</li>
<li>心智圖</li>
</ul>
<blockquote>
<p>卡住就出去走走</p>
</blockquote>
<h2 id="設計">設計</h2>
<p>錯把 PPT 當成 WORD</p>
<p>太多重點就是沒有重點</p>
<p>最多6個重點，不要超過6個字</p>
<p>分層</p>
<p>錯誤配色</p>
<p>背景色與字體色太近</p>
<h3 id="字型">字型</h3>
<ul>
<li>不要超過三種字型</li>
<li>斜體字（Ｘ）</li>
<li>顏色</li>
<li>大小</li>
<li>內容極簡化</li>
<li>視覺輔助</li>
</ul>
<h3 id="設計原則">設計原則</h3>
<ul>
<li>一次只說一件事</li>
<li>相近</li>
<li>重複</li>
<li>對齊</li>
<li>對比</li>
</ul>
<h3 id="配色">配色</h3>
<p>大學問，推薦工具：</p>
<ul>
<li>adobe Color CC</li>
<li>color Hunt </li>
</ul>
<h3 id="影像">影像</h3>
<ul>
<li>美好的</li>
<li>情緒性</li>
<li>故事性</li>
<li>隱喻性</li>
<li>（Ｘ）低畫質</li>
<li>（Ｘ）變形圖片</li>
<li>（Ｘ）版權所有</li>
</ul>
<h2 id="呈現">呈現</h2>
<ul>
<li>練習、練習、練習</li>
<li>回想，最初的熱情。為什麼要做簡報？</li>
<li>在沒有電流通過全身的感覺之前，不要上台做簡報。</li>
<li>找回最初的感動</li>
<li>保持簡短</li>
</ul>
<h3 id="開場">開場</h3>
<ul>
<li>故事性</li>
<li>案例</li>
<li>ＱＡ策略測試</li>
</ul>
<h3 id="注意站位">注意站位</h3>
<ul>
<li>簡報器</li>
<li>停頓（key: B）簡報變白</li>
<li>肢體表情</li>
<li>Eye contact</li>
</ul>
<p>內容 7%</p>
<p>聲音 38%</p>
<p>肢體語言 55%</p>
<p>以上研究是針對，做情緒性溝通的時候</p>
<h2 id="Story_Telling_說故事">Story Telling 說故事</h2>
<h3 id="在簡報裡面架構故事">在簡報裡面架構故事</h3>
<h4 id="好故事第一件事：">好故事第一件事：</h4>
<ul>
<li>打動人心</li>
<li>真實故事</li>
<li>結合自身經驗</li>
</ul>
<h4 id="好故事第二件事：">好故事第二件事：</h4>
<ul>
<li>精簡化故事</li>
<li>長話短說</li>
<li>留下與簡報有關</li>
</ul>
<blockquote>
<p>如何將人生的意外，變成美麗的風景，是一門藝術。</p>
</blockquote>
<h3 id="如何結尾？">如何結尾？</h3>
<blockquote>
<p>使用名句</p>
</blockquote>
<p>舉例 1：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">所以不管我們是</div><div class="line">大碎步的前行</div><div class="line">小碎步的泥濘中匍匐前進</div><div class="line">我們都瘸定走到終點</div></pre></td></tr></table></figure>

<p>舉例 2：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">既然已經選擇要做這件事</div><div class="line">那就該死的把它做到最好</div><div class="line">讓他值得 - 賈伯斯</div></pre></td></tr></table></figure>

<h2 id="簡報達人推薦">簡報達人推薦</h2>
<p>Nancy Duarte</p>
<ul>
<li>幫前高爾副總統製作</li>
<li>不願意面對的真相</li>
<li>Five Rules for Presentations(簡報五個原則)</li>
<li>slide ology</li>
<li>Duarte 公司（多媒體公司）</li>
</ul>
<p>Garr Raynolds</p>
<ul>
<li>日本大學教書</li>
<li>2004 成立簡報部落格</li>
<li>Presentation zen《簡報禪》</li>
</ul>
<p>韓明文</p>
<ul>
<li>2009 開始出簡報相關書籍</li>
<li>2011 出版《簡單 x 簡報》</li>
<li>商業簡報網</li>
<li>99 個簡報法則</li>
<li>簡報的品質，決定在你花多少時間跟自己對話</li>
</ul>
<p>王永福</p>
<ul>
<li>福哥的部落格</li>
<li>幫 Nancy Duarte 翻譯</li>
<li>上台的技術</li>
</ul>
<p>孫治華</p>
<ul>
<li>簡報實驗室</li>
</ul>
<p>林稚蓉</p>
<ul>
<li>簡報小學堂</li>
<li>視覺話設計、強調互動、氣氛營造</li>
</ul>
<p>彭毅弘</p>
<ul>
<li>簡報藝術烘焙坊</li>
<li>邏輯架構清晰</li>
</ul>
<p>林泰君</p>
<ul>
<li>簡報一沙鷗</li>
<li>分享參加過的活動，什麼是好的範例，怎麼做更好是什麼</li>
<li>更新頻率高</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>TaiwanLeft MOOCs 線上學習 “不只是簡報” 筆記。<ul>
<li>國立嘉義大學</li>
<li>不只是簡報</li>
<li>教師: 王思齊</li>
</ul>
</li>
<li>本週 outline:<ul>
<li>製作簡報花費時間<ul>
<li>準備</li>
<li>設計</li>
<li>呈現</li>
</ul>
</li>
<li>Story Telling 說故事</li>
<li>簡報達人推薦</li>
</ul>
</li>
</ul>
<p>非常不錯的課程值得推薦！</p>
]]>
    
    </summary>
    
      <category term="TaiwanLeft" scheme="http://hungjie19.github.io/hexoblog/tags/TaiwanLeft/"/>
    
      <category term="presentation" scheme="http://hungjie19.github.io/hexoblog/tags/presentation/"/>
    
      <category term="不只是簡報" scheme="http://hungjie19.github.io/hexoblog/tags/%E4%B8%8D%E5%8F%AA%E6%98%AF%E7%B0%A1%E5%A0%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AngualrJS directive use isolated scope binding issue in Firefox only]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/11/11/AngularJS-directive-use-isolated-scope-binding-issue-in-Firefox-only/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/11/11/AngularJS-directive-use-isolated-scope-binding-issue-in-Firefox-only/</id>
    <published>2015-11-11T13:15:33.000Z</published>
    <updated>2015-12-02T12:48:48.000Z</updated>
    <content type="html"><![CDATA[<p>使用 angularJS 開心的寫一個 directive 使用獨立 scope (isolated scope) 的時候踩到一個<code>filefox only</code>的坑，因為只有 filefox 有，在 Chrome, Safari, ie 都沒發生過實在太特別了..所以紀錄一下..OTZ..感謝: <code>raphahsu</code>。<br><a id="more"></a></p>
<h2 id="直接看範例檔:">直接看範例檔:</h2>
<p>sample Code 功能是 input ＋ remove button, 點擊 button 將會把 input 內容清空<br>相當於 <code>&lt;input type=&#39;search&#39;/&gt;</code> 的功能。</p>
<figure class="highlight"><figcaption><span>firefoxissue.html</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">ng-app</span>=<span class="value">"myapp"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>firefox directive issue<span class="tag">&lt;/<span class="title">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> app = angular.module(<span class="string">'myapp'</span>, []);</div><div class="line"></div><div class="line">    app.controller(<span class="string">'myCtrl'</span>,  <span class="function"><span class="keyword">function</span><span class="params">($scope)</span> </span>{</div><div class="line">        $scope.hello = <span class="string">"firefox"</span>;</div><div class="line">    });</div><div class="line"></div><div class="line">    app.directive(<span class="string">'firefoxissue'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">        <span class="keyword">return</span> {</div><div class="line">            restrict: <span class="string">'E'</span>,</div><div class="line">            replace: <span class="literal">true</span>, <span class="comment">// key Point !!</span></div><div class="line">            scope: {</div><div class="line">                listen: <span class="string">'='</span></div><div class="line">            },</div><div class="line">            template: <span class="string">'&lt;input type="text" ng-model="listen" placeholder="bowers?"/&gt;'</span>+</div><div class="line">                        <span class="string">'&lt;button ng-show="listen" ng-click="remove()"&gt;X&lt;/button&gt;'</span>,</div><div class="line">            link: <span class="function"><span class="keyword">function</span><span class="params">( scope )</span> </span>{</div><div class="line">                scope.remove = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">                    scope.listen = <span class="string">''</span>;</div><div class="line">                }</div><div class="line">            }</div><div class="line">        };</div><div class="line">    });</div><div class="line">    <span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-controller</span>=<span class="value">"myCtrl"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">h1</span>&gt;</span>firefox driective issue Test<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="title">firefoxissue</span> <span class="attribute">listen</span>=<span class="value">"hello"</span>&gt;</span><span class="tag">&lt;/<span class="title">firefoxissue</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<p>主要是16行： <code>replace: true</code> 這部分不要用或者設定為 <code>false</code> 既可。<br>因此範例檔直接執行會是錯誤的狀態。</p>
<h2 id="Reference:">Reference:</h2>
<ul>
<li><a href="https://github.com/angular/angular.js/issues/11627" target="_blank" rel="external">https://github.com/angular/angular.js/issues/11627</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用 angularJS 開心的寫一個 directive 使用獨立 scope (isolated scope) 的時候踩到一個<code>filefox only</code>的坑，因為只有 filefox 有，在 Chrome, Safari, ie 都沒發生過實在太特別了..所以紀錄一下..OTZ..感謝: <code>raphahsu</code>。<br>]]>
    
    </summary>
    
      <category term="AngularJS" scheme="http://hungjie19.github.io/hexoblog/tags/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mopcon 2015 工作人員參與心得 議程組 - Jacky]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/11/05/mopcon-2015-%E5%B7%A5%E4%BD%9C%E4%BA%BA%E5%93%A1%E5%8F%83%E8%88%87%E5%BF%83%E5%BE%97-%E8%AD%B0%E7%A8%8B%E7%B5%84-Jacky/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/11/05/mopcon-2015-工作人員參與心得-議程組-Jacky/</id>
    <published>2015-11-04T17:24:39.000Z</published>
    <updated>2015-11-04T18:06:23.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5NnBXN0xrTFZlNmc" alt="mopcom 2015 議程組 - Jacky"></p>
<h2 id="為什麼參加_mopcon_?">為什麼參加 mopcon ?</h2>
<p>去年在 Facebook 上面看到許多朋友分享 mopcon 2014 照片有 mopcon 娘、超有梗Ｔ恤 <code>&quot;這不是BUG，這是特色&quot;</code>，才發覺原來南台灣有個科技研討會並<code>堅持舉辦在濁水溪以南</code>，照顧南部的鄉親，的確台灣的重北輕南情況在科技業中更是明顯，天龍國以外的小朋友想要知道今年科技趨勢是什麼、用什麼技術、熱門議題遮些資訊都要北上一趟才能獲得..但光是參與門票和車資、住宿費用加起來已經是一筆很大的開銷，而 mopcon 的出發點就是這麼單純的認為南部絕對需要一個大型研討會。</p>
<a id="more"></a>
<hr>
<h2 id="為什麼參加_mopcon_工作人員_?">為什麼參加 mopcon 工作人員 ?</h2>
<p>記得是在參加 workshop 最後工商服務的時間剛好 mopcon 2105 議程組組長 - 凍仁，上台說明今年的 mopcon 並且歡迎<code>有志青年加入議程組</code>，會後我就向凍仁要了一張名片並聽他講解議程組工作內容，不過我沒有相關經驗所以沒有什麼概念，只覺得是一個機會。</p>
<h3 id="決定加入的原因：">決定加入的原因：</h3>
<ol>
<li>我想知道如何籌備一個成功的研討會。</li>
<li>我想知道如何跟一群高手合作。</li>
<li>我想近距離了解高手是怎麼工作的。</li>
<li>近距離接觸講師。</li>
</ol>
<p>因此第一次參加 mopcon 就直接加入議程組擔任工作人員。</p>
<hr>
<h2 id="議程組工作內容大綱">議程組工作內容大綱</h2>
<ul>
<li>5月議程組第一次見面分配：主持人6名 / 機動組。</li>
<li>6月整理歷屆講師與規劃、推薦 2015 年度講師。</li>
<li>7月寄發第一階段講師邀請信，彙整、討論。</li>
<li>8月寄發第二階段講師邀請信、Call for Presentations，彙整、討論。</li>
<li>9月協助彙整議程資料，編輯 gitbook。</li>
<li>10月協助大會手冊內容、更新官網議程與講師資料。</li>
<li>10月31 ~ 11月1 mopcon 正式開始。</li>
</ul>
<h3 id="在議程組可以做什麼？">在議程組可以做什麼？</h3>
<ul>
<li>可以邀請到每天拜讀文章的講師上台演講。</li>
<li>可以推薦最想聽到的熱門主題。</li>
<li>可以近距離與講師接觸。</li>
<li>可以學到 gitbook 怎麼用。</li>
<li>可以學到官網資料怎麼上。</li>
<li><del>可以聽到其他公司的八卦。</del></li>
</ul>
<hr>
<p><img src="https://googledrive.com/host/0B4fEFbbW93y5TFBxb2lWcjhWUVU" alt="mopcom 2015 主題Ｔ恤"></p>
<h2 id="我覺得_mopcon_是什麼_?">我覺得 mopcon 是什麼 ?</h2>
<blockquote>
<p>mopcon 是一個舞台讓所有參與者都有發揮的空間。</p>
</blockquote>
<ul>
<li>對於講師：<ul>
<li>將自己熟悉的熱門技術濃縮在 45 分鐘的議程中，分享給更多的人知道。</li>
</ul>
</li>
<li>對於贊助商：<ul>
<li>透過實體攤位介紹公司產品，近距離聆聽顧客的聲音，並且是個招兵買馬的好機會。</li>
</ul>
</li>
<li>Sponsor Talk：<ul>
<li>300 秒告訴南部的鄉親，我們為什麼再這裡，在做什麼，提供什麼服務，關心什麼樣的議題，需要什麼人才。</li>
</ul>
</li>
<li>Lightning Talk：<ul>
<li>mopcon 給您 300 秒，讓你有發光發熱的機會。</li>
</ul>
</li>
<li>Unconference：<ul>
<li>讓 mopcon 知道沒邀請你是錯誤的（誤 XD </li>
<li>對於新創公司肯定介紹自己的好機會。</li>
<li>尋求志同道合的交流平台。</li>
</ul>
</li>
<li>對於工作人員：<ul>
<li>mopcon 需要關心科技議題的熱血青年對於規劃、合作、溝通、管理等等..因此我們需要各種人才，只要你有想法有做法，到處都有你發揮的空間。</li>
</ul>
</li>
<li>參與會眾：<ul>
<li>聽技術、瞻仰大神，甚至找人、找事、找合作相信 mopcon 可以滿足你的需求。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="https://googledrive.com/host/0B4fEFbbW93y5R2lCZFMyZzFrMHc" alt="mopcom 2015 議程組組員 - 少jimmy大大"></p>
<h2 id="心得">心得</h2>
<ul>
<li><p>最辛苦的肯定是組長大人，許多溝通協調的部分在組長那端已經幫我們做完，議程組可以說是<code>凍仁與他的快樂夥伴們</code>，可以看到組長的重責大任，見證到組長的工作效率與決策，我想應該連任把今年的經驗傳承下去 XDD。</p>
</li>
<li><p>當天現場最辛苦的是場務組、門機組、線路組等現場工作人員…無法想像一群人可以這樣合作無間讓會議順利圓滿完成，太強大了！！</p>
</li>
<li><p>當天現場的工作是協助主持人令會議順利進行，舉凡設備故障，燈光，講師需求，仔細想想很多地方可以做得更好，比如應先了解環境設定應該找誰協助，會議現場設定應該找誰協助，有時候搞不太清處狀況，因此也謝謝組員即時協助。</p>
</li>
<li><p>印象深刻的贊助商：</p>
<ul>
<li>Yahoo: 分享的主題都是今年最火紅的，HR 在 Sponsor Talk 帶動的氣氛非常歡樂活潑。</li>
<li>Gandi: 主要販售域名，公司 Logo 很好看，發送的Ｔ恤沒了遽然要寄給會眾。</li>
<li>newegg: 總經理慷慨激昂的演講，稱霸世界的決心。</li>
<li>kkbox: 一直玩一直吃一直玩。</li>
<li>和沛科技: 翟本橋大神親臨現場啊..親切又帥氣誰受得了，廣昭英才，公司配股為自己工作不再當個打工仔 T__T。</li>
<li>webduino: 想起了高中拿烙鐵的時代..讓軟體工程師硬起來的攤位，超多有趣的<strong>硬用</strong>。</li>
<li>LINE: 想印照片嗎？LINE你的印表機.. O_o 酷斃了，帥到掉渣~~</li>
<li>AWS: 我們第一年免費唷！還提供各種解決方案。</li>
</ul>
</li>
<li><p>Unconference 第二天有位國外講者<code>Chip</code>分享 IoT 原來他在美國軍方工作 20 多年，他非常熱愛台灣並且很想把所學所會分享給台灣的朋友，順便尋求合作夥伴，他非常願意教你他會的東西，並且付給您水準以上的薪資。</p>
</li>
<li><p>星光晚宴，過程有許多插曲，不過最值得就是與<code>LINE</code>講師們一同用餐，我很怕講師跟一群小朋友坐在一起有點尷尬，因此拋開羞恥心開始向講師們請教各種蠢問題，比如：可以向我們分享 LINE 工作環境嗎？LINE 對於安全性要求是不是很高？LINE UI如此簡潔美麗是不是非常重視設計師？LINE 注重什麼樣的人才什麼特質？十分感謝講師 Marco、Benny、George 非常親切且認真的回答每個問題，對我們而言是十分大的收穫，印象非常深刻的經驗，謝謝。</p>
</li>
<li><p>參加<code>mopcon</code>是一個很棒的經驗，認識許多朋友，比我預期中學習更多的東西，幾乎無法消化，如果明年還會參與議程組的話，希望<code>挑戰主持人</code>工作，訓練口條，然後英文練一下 :P。</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5NnBXN0xrTFZlNmc" alt="mopcom 2015 議程組 - Jacky"></p>
<h2 id="為什麼參加_mopcon_?">為什麼參加 mopcon ?</h2>
<p>去年在 Facebook 上面看到許多朋友分享 mopcon 2014 照片有 mopcon 娘、超有梗Ｔ恤 <code>&quot;這不是BUG，這是特色&quot;</code>，才發覺原來南台灣有個科技研討會並<code>堅持舉辦在濁水溪以南</code>，照顧南部的鄉親，的確台灣的重北輕南情況在科技業中更是明顯，天龍國以外的小朋友想要知道今年科技趨勢是什麼、用什麼技術、熱門議題遮些資訊都要北上一趟才能獲得..但光是參與門票和車資、住宿費用加起來已經是一筆很大的開銷，而 mopcon 的出發點就是這麼單純的認為南部絕對需要一個大型研討會。</p>
]]>
    
    </summary>
    
      <category term="mopcom" scheme="http://hungjie19.github.io/hexoblog/tags/mopcom/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodeJS get google 表單 to JSON，使用 google-spreadsheet]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/10/15/nodeJS-get-google-%E8%A1%A8%E5%96%AE%EF%BC%8C%E4%BD%BF%E7%94%A8-google-spreadsheet/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/10/15/nodeJS-get-google-表單，使用-google-spreadsheet/</id>
    <published>2015-10-14T16:32:22.000Z</published>
    <updated>2015-10-15T15:35:07.000Z</updated>
    <content type="html"><![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>讀取 google spreadsheet</li>
<li>解析 每一行欄位</li>
<li>儲存 JSON 檔案</li>
</ol>
<a id="more"></a>
<h3 id="開始之前：">開始之前：</h3>
<p>首先本次介紹的方法是類似 get json 的簡易方法。</p>
<p>因此我們讀取來源表單必須是公開 <code>散佈到網路</code> 上的形式。</p>
<p>所以如果表單內容較為 <code>機敏</code> 的話可以將表單內容下載成 <code>csv</code> 檔案。</p>
<p>並參考以下文章同樣可以將表單內容轉成 JSON 檔案 <a href="http://hungjie19.github.io/hexoblog/2015/10/13/nodeJS-read-csv-to-JSON/" target="_blank" rel="external">nodeJS read csv to JSON</a></p>
<h3 id="google_spreadsheet_散佈到網路">google spreadsheet 散佈到網路</h3>
<p><img src="https://googledrive.com/host/0B4fEFbbW93y5T1NCd1NTNkJVcEU" alt="散佈到網路"></p>
<h3 id="google_spreadsheet_散佈形式">google spreadsheet 散佈形式</h3>
<p><img src="https://googledrive.com/host/0B4fEFbbW93y5QnNVT2ZuYVhLdVU" alt="散佈形式"></p>
<h3 id="google_spreadsheet_表單_KEY_值">google spreadsheet 表單 KEY 值</h3>
<p><img src="https://googledrive.com/host/0B4fEFbbW93y5RlVQREdlcHI5ZGs" alt="表單 KEY 值"></p>
<h3 id="npm_模組">npm 模組</h3>
<p>接下來我們將使用 npm 上面的一個模組 <code>google-spreadsheet</code> 來幫助我們解析表單內容</p>
<ul>
<li>npm<ul>
<li><a href="https://www.npmjs.com/package/google-spreadsheet" target="_blank" rel="external">https://www.npmjs.com/package/google-spreadsheet</a></li>
</ul>
</li>
<li>github<ul>
<li><a href="https://github.com/theoephraim/node-google-spreadsheet" target="_blank" rel="external">https://github.com/theoephraim/node-google-spreadsheet</a></li>
</ul>
</li>
</ul>
<h3 id="Installation">Installation</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> csvtojson <span class="comment">--save</span></span></div></pre></td></tr></table></figure>

<h3 id="一個簡單的_csv_to_json_範例程式架構如下：[demo_google_表單連結]">一個簡單的 csv to json 範例程式架構如下：<a href="https://docs.google.com/spreadsheets/d/1eWiJ-WFuYHlxZrna2ZoGvCGwdnV3NUfVFcuiGLEFo_8/edit#gid=0" target="_blank" rel="external">[demo google 表單連結]</a></h3>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// require nodeJS 內建 File System 模組.</span></div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="comment">// google-spreadsheet modules 宣告</span></div><div class="line"><span class="keyword">var</span> GoogleSpreadsheet = <span class="built_in">require</span>(<span class="string">"google-spreadsheet"</span>);</div><div class="line"> </div><div class="line"><span class="comment">// spreadsheet key is the long id in the sheets URL</span></div><div class="line"><span class="comment">// 如上圖將表單 key 值交傳給 google-spreadsheet modules 如上圖.</span></div><div class="line"><span class="keyword">var</span> my_sheet = <span class="keyword">new</span> GoogleSpreadsheet(<span class="string">'1eWiJ-WFuYHlxZrna2ZoGvCGwdnV3NUfVFcuiGLEFo_8'</span>);</div><div class="line"></div><div class="line"><span class="comment">// JSON 檔案儲存名稱</span></div><div class="line"><span class="keyword">var</span> saveFileName = <span class="string">'spreadsheet.json'</span>;</div><div class="line"></div><div class="line"><span class="comment">// Without auth -- read only </span></div><div class="line"><span class="comment">// IMPORTANT: See note below on how to make a sheet public-readable! </span></div><div class="line"><span class="comment">// # is worksheet id - IDs start at 1 </span></div><div class="line">my_sheet.getRows( <span class="number">1</span>, <span class="function"><span class="keyword">function</span><span class="params">(err, row_data)</span></span>{</div><div class="line">	<span class="comment">// 發生錯誤時</span></div><div class="line">	<span class="keyword">if</span> (err) {</div><div class="line">		<span class="built_in">console</span>.log( err );</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="built_in">console</span>.log(row_data);			<span class="comment">//每列資料	</span></div><div class="line">	<span class="comment">// console.log(row_data.length); 	//資料總數</span></div><div class="line">	<span class="comment">// 在此處理你的資料</span></div><div class="line"></div><div class="line">	<span class="comment">// 儲存成 JSON</span></div><div class="line">	<span class="comment">// fs.writeFile 使用 File System 的 writeFile 方法做儲存</span></div><div class="line">	<span class="comment">// 傳入三個參數（ 存檔名, 資料, 格式 ）</span></div><div class="line">	fs.writeFile( saveFileName, <span class="built_in">JSON</span>.stringify( row_data ), <span class="string">'utf8'</span>);</div><div class="line">});</div></pre></td></tr></table></figure>

<hr>
<h3 id="小結:">小結:</h3>
<p>許多強大的功能可能還是要透過申請 <code>Google Developers</code></p>
<p>如果只是簡單的公開表格則可以透過以上方法快速將資料取下，做處理並結合其他 api 做成服務。</p>
<p>好處是 user 可以使用平易近人的 excel 輸入自己的資料，如團購、訂便單，而負責統計的工程師可以透過 </p>
<p>enjoy!!</p>
<hr>
<h3 id="Reference:">Reference:</h3>
<ul>
<li><a href="http://wcc723.github.io/d3js/2014/10/16/Ironman-30-days-17/" target="_blank" rel="external">http://wcc723.github.io/d3js/2014/10/16/Ironman-30-days-17/</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>讀取 google spreadsheet</li>
<li>解析 每一行欄位</li>
<li>儲存 JSON 檔案</li>
</ol>
]]>
    
    </summary>
    
      <category term="nodeJS" scheme="http://hungjie19.github.io/hexoblog/tags/nodeJS/"/>
    
      <category term="JSON" scheme="http://hungjie19.github.io/hexoblog/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodeJS read csv to JSON，使用 csvtojson]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/10/13/nodeJS-read-csv-to-JSON%EF%BC%8C%E4%BD%BF%E7%94%A8-csvtojson/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/10/13/nodeJS-read-csv-to-JSON，使用-csvtojson/</id>
    <published>2015-10-13T15:03:58.000Z</published>
    <updated>2015-10-15T15:28:32.000Z</updated>
    <content type="html"><![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>讀取 csv 檔案</li>
<li>解析 csv 成 JSON 檔案</li>
<li>儲存 JSON 檔案</li>
</ol>
<a id="more"></a>
<h3 id="開始之前：">開始之前：</h3>
<p>我們將使用 npm 上面的一個模組 <code>csvtojson</code> 來幫助我們將 csv 解析成 JSON.</p>
<ul>
<li>npm<ul>
<li><a href="https://www.npmjs.com/package/csvtojson" target="_blank" rel="external">https://www.npmjs.com/package/csvtojson</a></li>
</ul>
</li>
<li>github<ul>
<li><a href="https://github.com/Keyang/node-csvtojson" target="_blank" rel="external">https://github.com/Keyang/node-csvtojson</a></li>
</ul>
</li>
</ul>
<h3 id="Installation">Installation</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> csvtojson <span class="comment">--save</span></span></div></pre></td></tr></table></figure>

<h3 id="一個簡單的_csv_to_json_範例程式架構如下：">一個簡單的 csv to json 範例程式架構如下：</h3>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// require nodeJS 內建 File System 模組.</span></div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="comment">// csvtojson modules 宣告</span></div><div class="line"><span class="keyword">var</span> Converter = <span class="built_in">require</span>(<span class="string">"csvtojson"</span>).Converter;</div><div class="line"><span class="keyword">var</span> newConverter = <span class="keyword">new</span> Converter({});</div><div class="line"></div><div class="line"><span class="comment">// csv 檔案位置/名稱，先存在變數中只是為了方便看 code.</span></div><div class="line"><span class="keyword">var</span> csvfile = <span class="string">'my_csv_File.csv'</span></div><div class="line"></div><div class="line"><span class="comment">// JSON 檔案儲存名稱</span></div><div class="line"><span class="keyword">var</span> saveFileName = <span class="string">'csvtojson.json'</span>;</div><div class="line"></div><div class="line"><span class="comment">// read from file </span></div><div class="line"><span class="comment">// 利用 fs 讀取 csv 檔案並交給 csvtojson 解析</span></div><div class="line">fs.createReadStream( csvfile ).pipe( newConverter );</div><div class="line"></div><div class="line"><span class="comment">// end_parsed will be emitted once parsing finished </span></div><div class="line"><span class="comment">// 當 csvtojson 結束解析的時候</span></div><div class="line">newConverter.on(<span class="string">"end_parsed"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(jsonArray)</span> </span>{</div><div class="line">  <span class="comment">// 可開啟這行在 Command Line 觀看 data 內容</span></div><div class="line">  <span class="comment">// console.log(jsonArray); //here is your result jsonarray </span></div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">// 對 jsonArray 做處理，寫你的 code</span></div><div class="line"></div><div class="line"></div><div class="line">  <span class="comment">// 儲存成 JSON</span></div><div class="line">  <span class="comment">// fs.writeFile 使用 File System 的 writeFile 方法做儲存</span></div><div class="line">  <span class="comment">// 傳入三個參數（ 存檔名, 資料, 格式 ）</span></div><div class="line">  fs.writeFile( saveFileName, <span class="built_in">JSON</span>.stringify( jsonArray ), <span class="string">'utf8'</span>);</div><div class="line"></div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'csv to JSON done !!'</span>);</div><div class="line">});</div></pre></td></tr></table></figure>

<hr>
<h3 id="小結:">小結:</h3>
<p>常常在使用 Excel / google spreadsheet 做統計資料的時候，就在想是不是可以把這些資料做成 JSON 檔案，再去和其他 api 結合做出好玩的應用，當然有很多線上的功能可幫助我們完成同樣的動作，但是利用 nodeJS 來實作一方面可以學習 nodeJS 並瞭解 JavaScript 不只可以寫網頁同時感受 nodeJS 強大威力！</p>
<p>enjoy!!</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>讀取 csv 檔案</li>
<li>解析 csv 成 JSON 檔案</li>
<li>儲存 JSON 檔案</li>
</ol>
]]>
    
    </summary>
    
      <category term="nodeJS" scheme="http://hungjie19.github.io/hexoblog/tags/nodeJS/"/>
    
      <category term="JSON" scheme="http://hungjie19.github.io/hexoblog/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodeJS get JSON, 在 nodeJS server 直接取得 Http JSON]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/10/12/nodeJS-get-JSON-%E5%9C%A8-nodeJS-server-%E7%9B%B4%E6%8E%A5%E5%8F%96%E5%BE%97-Http-JSON/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/10/12/nodeJS-get-JSON-在-nodeJS-server-直接取得-Http-JSON/</id>
    <published>2015-10-12T13:52:17.000Z</published>
    <updated>2015-10-15T15:28:48.000Z</updated>
    <content type="html"><![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>利用 nodeJS server http service get JSON api.</li>
<li>使用 fs 另儲存 JSON 檔案。</li>
</ol>
<a id="more"></a>
<h3 id="一個簡單的_get_api_範例程式架構如下：">一個簡單的 get api 範例程式架構如下：</h3>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// require nodeJS 內建 http 模組.</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</div><div class="line"></div><div class="line"><span class="comment">// require nodeJS 內建 File System 模組.</span></div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"></div><div class="line"><span class="comment">// JSON api URL 先存在變數中，只是為了方便看 code. </span></div><div class="line"><span class="keyword">var</span> url = <span class="string">'http://hungjie19.github.io/myapi/test.json'</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 使用 http 中 get 方法</span></div><div class="line">http.get(url, <span class="function"><span class="keyword">function</span><span class="params">(response)</span></span>{</div><div class="line">    <span class="keyword">var</span> data = <span class="string">''</span>;</div><div class="line"></div><div class="line">    <span class="comment">// response event 'data' 當 data 陸續接收的時候，用一個變數累加它。</span></div><div class="line">    response.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span><span class="params">(chunk)</span></span>{</div><div class="line">        data += chunk;</div><div class="line">    });</div><div class="line"></div><div class="line">    <span class="comment">// response event 'end' 當接收 data 結束的時候。</span></div><div class="line">    response.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">        <span class="comment">// 將 JSON parse 成物件</span></div><div class="line">        data = <span class="built_in">JSON</span>.parse(data);</div><div class="line">        <span class="comment">// console.log(data); // 可開啟這行在 Command Line 觀看 data 內容</span></div><div class="line">        </div><div class="line">        </div><div class="line">        <span class="comment">// 對 data 做處理，寫你的 code !!</span></div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">/* 儲存成 JSON</span></div><div class="line">         * fs.writeFile 使用 File System 的 writeFile 方法做儲存</div><div class="line">         * 傳入三個參數（ 存檔名, 資料, 格式 ）</div><div class="line">         */</div><div class="line">        fs.writeFile( <span class="string">'save.json'</span>, <span class="built_in">JSON</span>.stringify( data ), <span class="string">'utf8'</span>);</div><div class="line">    });</div><div class="line">}).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>{ <span class="comment">// http get 錯誤時</span></div><div class="line">      <span class="built_in">console</span>.log(<span class="string">"error: "</span>, e);</div><div class="line">});</div></pre></td></tr></table></figure>

<hr>
<h3 id="Reference:">Reference:</h3>
<ul>
<li><a href="https://nodejs.org/api/http.html" target="_blank" rel="external">https://nodejs.org/api/http.html</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="目標：">目標：</h3>
<ol>
<li>利用 nodeJS server http service get JSON api.</li>
<li>使用 fs 另儲存 JSON 檔案。</li>
</ol>
]]>
    
    </summary>
    
      <category term="nodeJS" scheme="http://hungjie19.github.io/hexoblog/tags/nodeJS/"/>
    
      <category term="JSON" scheme="http://hungjie19.github.io/hexoblog/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[高雄前端社群#18 - 前端面試大補帖不求人！]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/06/21/%E9%AB%98%E9%9B%84%E5%89%8D%E7%AB%AF%E7%A4%BE%E7%BE%A4-18-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%A9%A6%E5%A4%A7%E8%A3%9C%E5%B8%96%E4%B8%8D%E6%B1%82%E4%BA%BA%EF%BC%81/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/06/21/高雄前端社群-18-前端面試大補帖不求人！/</id>
    <published>2015-06-21T05:49:59.000Z</published>
    <updated>2016-05-09T17:55:52.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5VkZDOTZpZzRKWlE" alt="高雄前端社群#18 - 前端面試大補帖不求人！"></p>
<p>這次主題找了四位都是近幾月找到前端、網頁 offer 的朋友，分享他們的前端求職過程、如何自學前端開發、為什麼想要投入前端來進行交流。</p>
<p>分享者共通點：近三個月獲得前端職缺或設計師職缺。</p>
<a id="more"></a>
<hr>
<h2 id="鍾傑倫_-_台南前端面試經驗">鍾傑倫 - 台南前端面試經驗</h2>
<ul>
<li>kdan Mobile F2E<ul>
<li>前端工程師</li>
</ul>
</li>
<li>JavaSvript<ul>
<li>物件導向機制？</li>
<li>MVC</li>
</ul>
</li>
<li>出演算法題目，洗牌撲克牌<ul>
<li>後續寄信給主管詢問演算法最佳解</li>
</ul>
</li>
<li>自己架網站<ul>
<li>Firebase</li>
<li>github page</li>
<li>API</li>
</ul>
</li>
<li>面試心得：<ul>
<li>演算法題目？稍微準備經典題目</li>
<li>履歷（作品）</li>
<li>企圖心</li>
<li>學習淺力</li>
</ul>
</li>
<li>選擇公司<ul>
<li>未來發展</li>
<li>限制</li>
</ul>
</li>
</ul>
<hr>
<h2 id="謝宛珊_-_高雄/台北_網頁設計師面試經驗">謝宛珊 - 高雄/台北 網頁設計師面試經驗</h2>
<ul>
<li>奇豐資訊<ul>
<li>設計師</li>
</ul>
</li>
<li>求職經歷<ul>
<li>設計＞前端＞企劃？</li>
</ul>
</li>
<li>履歷<ul>
<li>你做過的好事證據</li>
<li>作品集</li>
<li>有創意</li>
</ul>
</li>
<li>面試<ul>
<li>服裝儀容</li>
<li>自信禮貌</li>
<li>跟面試官聊天</li>
</ul>
</li>
<li>台北：<ul>
<li>雄獅旅遊 - 真正職務 製作出版設計</li>
<li>華美航運 - 國際物流 集貨倉儲，我要當一個主管！面試官回問：當主管最需要的一件事情是什麼？是氣勢是魄力。</li>
<li>浩鑫科技 - UI/UX</li>
<li>通泰媒體 - 網路媒體播放</li>
<li>奧文環球 - 博弈類, 環境很好, 需出差</li>
<li>酷多創意傳媒 - 代理憤怒鳥</li>
</ul>
</li>
<li>高雄：<ul>
<li>環球誠信 - 美式作風, 英文要求高</li>
<li>台灣新蛋 - newegg, 丟版型需有RWD</li>
<li>奇豐資訊 - 直接時作網頁 1小時</li>
<li>鈞達資訊 - 社區社群app, 實作網頁</li>
<li>魔術師科技 - 博弈產業, 環境好, 待遇高, 供應午晚餐</li>
<li>頤瑞網路科技 - 主管先行用104留言版詢問問題</li>
</ul>
</li>
</ul>
<hr>
<h2 id="王生豪_-_台中_/_台北_前端面試經驗">王生豪 - 台中 / 台北 前端面試經驗</h2>
<ul>
<li>意外的前端旅程<ul>
<li>資策會 - 前端工程師</li>
<li>程式 x 圖形 x 動態 ？ 乾嗚科零？</li>
<li>前端工程師 - 三個願望一次滿足</li>
<li>技能樹</li>
</ul>
</li>
<li>動手做最快 - 書只是輔助</li>
<li>入門書單<ul>
<li>深入淺出 HTML&amp;CSS</li>
<li>深入淺出 jQurey</li>
<li>HTML&amp;CSS：網站設計建置優化之道</li>
</ul>
</li>
<li>練功順序<ol>
<li>切版 HTML+CSS <a href="http://premiumcoding.com/" target="_blank" rel="external">premiumcoding freePSD</a></li>
<li>jQurey</li>
<li>RWD <a href="http://sweeteason.pixnet.net/blog/post/42130394#c21" target="_blank" rel="external">響應式網站開發教學與心得</a></li>
</ol>
</li>
<li>履歷準備資料<ul>
<li>作品介紹 PPT</li>
</ul>
</li>
<li>常見考題<ul>
<li>自我介紹</li>
<li>研究所論文/大學專題</li>
<li>為什麼想走前端？</li>
<li>有沒有作品？</li>
<li>熟悉哪些技術？</li>
<li>願意學習後端技術嗎？</li>
<li>現場實作（網路考古題）</li>
</ul>
</li>
<li>加分<ul>
<li>作品</li>
<li>版本控管 Git, GitHub</li>
<li>RWD (Responsive Web Design)</li>
</ul>
</li>
<li>面試前<ul>
<li>複習履歷跟作品</li>
<li>確認公司地點路線，避免遲到</li>
</ul>
</li>
<li>工作半年心得<ul>
<li>要學的東西很多 - 學越深越渺小</li>
<li>複習下技能樹</li>
<li>接觸到 UI/UX </li>
</ul>
</li>
</ul>
<hr>
<h2 id="施慶銓_-_台北前端面試經驗">施慶銓 - 台北前端面試經驗</h2>
<ul>
<li>心理學系</li>
<li>澳洲打工度假 2 年</li>
<li>高中輔導老師</li>
<li>半導體國內業務</li>
<li>巨＿補習 java</li>
<li>面試經驗 - 1<ul>
<li>上海 - 獵人頭公司</li>
<li>澎風澎過頭</li>
<li>在街上買到哈佛大學 - 正向心理學 DVD</li>
<li>TED - Carol Dweck - 心態致勝(2007)</li>
</ul>
</li>
<li>Growth vs Fixed Mindset<ul>
<li>聰明 vs 努力</li>
<li>容易 vs 困難</li>
<li>放棄 vs 堅持</li>
<li>Test again (-20% vs 30%)</li>
</ul>
</li>
<li>稱讚一個人 “聰明or努力” 微妙的差別！</li>
<li>神經通道特點：<ul>
<li>河流、沖刷</li>
<li>越沖刷水管越大 ＝ 記憶越深</li>
<li>用進, 廢退原則</li>
<li>大腦喜歡熟悉的水道</li>
<li>犯錯時學得最快</li>
</ul>
</li>
</ul>
<hr>
<h2 id="廖洧杰_-_前端就職技巧123">廖洧杰 - 前端就職技巧123</h2>
<p><a href="https://docs.google.com/presentation/d/1B0EZB4hUcFD8gzhda1dPqaBx8TcuxSC6VXrhoig03Uw/edit#slide=id.p" target="_blank" rel="external">講者 PPT</a></p>
<ul>
<li>F2E 職缺越來越多</li>
<li>前端兩大類：<ul>
<li>前端設計師：圖片, UI/UX<ul>
<li>網頁設計師 與 前端設計師差別</li>
<li>須懂 Git 版本控制 與 工程師合作開發</li>
</ul>
</li>
<li>前端工程師：<ul>
<li>與設計師配合開發前端組件</li>
</ul>
</li>
</ul>
</li>
<li>有點雷的缺（包山包海、定義不明確）<ul>
<li>設計平台、UI/UX</li>
<li>學過iOS..</li>
<li>懂JAVA</li>
</ul>
</li>
<li>職缺不好的寫法<ul>
<li>HTML5CSSJavaScript</li>
<li>沒有詳細寫到深入程度</li>
<li>請不要寫與此<code>工作無關</code>的相關經驗</li>
</ul>
</li>
<li>產值效益 <ul>
<li>具備Responsive Mobile Layout設計經驗</li>
<li>熟悉PhoneGap與WebAPP開發經驗</li>
</ul>
</li>
<li>工作經歷（條列式）<ul>
<li>XX科技公司 - 前端工程師 (2013~2015)<ul>
<li>Mobile 前端效能優化</li>
<li>IOS Hybrid APP</li>
</ul>
</li>
</ul>
</li>
<li>觀察別人的履歷<ul>
<li>toptal</li>
<li>Linkedin</li>
</ul>
</li>
<li>投遞履歷<ul>
<li>不要用 word 可使用 PDF</li>
<li>可使用個人網站 or GitHub</li>
<li>了解 HR 審核履歷流程</li>
</ul>
</li>
<li>面試須注意的細節<ul>
<li>調查公司</li>
<li>面試過程務必確認工作內容</li>
<li>薪水心裡要有明確價碼</li>
<li>不懂不要裝懂</li>
<li>公司大多喜歡有主動學習的心態</li>
</ul>
</li>
<li>千萬不要說<ul>
<li>我不會，但我願意學</li>
</ul>
</li>
<li>人力銀行<ul>
<li><a href="https://jobs.github.com/" target="_blank" rel="external">github jobs</a></li>
<li><a href="https://www.linkedin.com/uas/login" target="_blank" rel="external">Linkedin</a></li>
<li>找一個職缺需求來訂定投入目標</li>
</ul>
</li>
</ul>
<h1 id="工程師應有心態">工程師應有心態</h1>
<ul>
<li>企圖心</li>
<li>學習心</li>
<li>求知慾</li>
<li>解決問題的心態</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5VkZDOTZpZzRKWlE" alt="高雄前端社群#18 - 前端面試大補帖不求人！"></p>
<p>這次主題找了四位都是近幾月找到前端、網頁 offer 的朋友，分享他們的前端求職過程、如何自學前端開發、為什麼想要投入前端來進行交流。</p>
<p>分享者共通點：近三個月獲得前端職缺或設計師職缺。</p>
]]>
    
    </summary>
    
      <category term="workshop" scheme="http://hungjie19.github.io/hexoblog/tags/workshop/"/>
    
      <category term="front-end" scheme="http://hungjie19.github.io/hexoblog/tags/front-end/"/>
    
      <category term="Interview" scheme="http://hungjie19.github.io/hexoblog/tags/Interview/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS Devil Day - JSDC Meetup]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/06/06/JS-Devil-Day-JSDC-Meetup/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/06/06/JS-Devil-Day-JSDC-Meetup/</id>
    <published>2015-06-06T05:48:08.000Z</published>
    <updated>2015-06-15T17:58:39.000Z</updated>
    <content type="html"><![CDATA[<p>Livehouse.in影片回顧：<br><a href="https://goo.gl/4wPj4W" target="_blank" rel="external">https://goo.gl/4wPj4W</a></p>
<p>video 有完整的內容，以下是雜記…</p>
<a id="more"></a>
<h1 id="更好的使用_Angular">更好的使用 Angular</h1>
<ul>
<li>講者：ALi<ul>
<li>github:esbb48</li>
</ul>
</li>
</ul>
<h2 id="Angular_JS">Angular JS</h2>
<ul>
<li>2009年開始的計畫<ul>
<li>google維護</li>
<li>1.4, 2.0 版本    </li>
</ul>
</li>
<li>購物車你會怎麼做？<ul>
<li>JS 綁定id去累計</li>
</ul>
</li>
<li>Angular 怎麼做？<ul>
<li>用 HTML 就可以累計</li>
<li>MVC modle</li>
<li>雙向綁定<ul>
<li>資料變畫面變</li>
<li>畫面變資料也會變</li>
</ul>
</li>
<li>畫面是透過Templates匯出<ul>
<li>HTML + Directives</li>
</ul>
</li>
<li>restrict 限制範圍</li>
<li>scope 繼承定義關係</li>
<li>injection</li>
<li>service</li>
<li>protracto 可被測試</li>
<li>常見的angular範例<ul>
<li>ng-madel</li>
<li>ng-bude</li>
</ul>
</li>
<li>模組化 </li>
<li>不好學？廣度或深度不夠</li>
</ul>
</li>
<li>善用框架的概念而不被框架所侷限</li>
<li>善用 Angular 特性寫出好維護的程式碼</li>
</ul>
<h1 id="JsvaScript_ES6">JsvaScript ES6</h1>
<p>講稿：<a href="https://github.com/coodoo/webpack-guide" target="_blank" rel="external">https://github.com/coodoo/webpack-guide</a><br>BABEL：<a href="http://babeljs.io/" target="_blank" rel="external">http://babeljs.io/</a></p>
<ul>
<li>arrow funcion</li>
<li>BABEL 轉譯成 es5 code</li>
<li>let 取代 var 講宣告鎖定在 madel 裡面</li>
<li>var [a, ……rest] //spread</li>
<li>class<ul>
<li>constructor</li>
<li>super</li>
</ul>
</li>
<li>Promise //collback</li>
<li>Generator<ul>
<li>可以將流程中斷,做完再將控制權還給你<ul>
<li>KoaJS</li>
<li>async<ul>
<li>async.series([a,b,c])//依序做完</li>
<li>async.waterfall([a,b,c]) //a做完傳給b</li>
</ul>
</li>
<li>es7: async await //未來式</li>
</ul>
</li>
</ul>
</li>
<li>flow type:</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span> <span class="params">(a:string, b:Number)</span>:<span class="title">object</span></span>{</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<p>node.js 穩定版本 0.10.38</p>
<ul>
<li>babel-node 支援 es6<ul>
<li>需取代原本 node 指令</li>
</ul>
</li>
</ul>
<h1 id="browser">browser</h1>
<ul>
<li>webpack</li>
</ul>
<hr>
<h1 id="會後討論：">會後討論：</h1>
<ul>
<li>coffee script vs javascript<ul>
<li>剛開始學會看不慣箭頭，function，縮排，等表示方法。</li>
</ul>
</li>
<li>es6 取代 coffee script？<ul>
<li>es6 80% 致敬 coffee.js ，所以如果你還不會 coffee 目前時間點不適合從頭學習，應該直接投資 es6 會是比較好的策略。</li>
</ul>
</li>
<li>JavaScript 未來走向？<ul>
<li>補足後端前往全端方向是必然的出路。</li>
<li>如果寫 React 也可以搶部分 iOS app 市場。</li>
</ul>
</li>
</ul>
<p>JavaScript Code Style：<a href="http://jscs.info/" target="_blank" rel="external">http://jscs.info/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Livehouse.in影片回顧：<br><a href="https://goo.gl/4wPj4W" target="_blank" rel="external">https://goo.gl/4wPj4W</a></p>
<p>video 有完整的內容，以下是雜記…</p>
]]>
    
    </summary>
    
      <category term="workshop" scheme="http://hungjie19.github.io/hexoblog/tags/workshop/"/>
    
      <category term="javascript" scheme="http://hungjie19.github.io/hexoblog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[coServ 開發小幫手使用 gulp 實踐 Live Reload]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/05/24/coServ-%E9%96%8B%E7%99%BC%E5%B0%8F%E5%B9%AB%E6%89%8B%E4%BD%BF%E7%94%A8-gulp-%E5%AF%A6%E8%B8%90-Live-Reload/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/05/24/coServ-開發小幫手使用-gulp-實踐-Live-Reload/</id>
    <published>2015-05-24T07:01:54.000Z</published>
    <updated>2015-05-24T08:18:30.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5RVh2cjFKa1R0eU0" alt="coServ + gulp 實踐 Live Reload"></p>
<a id="more"></a>
<p>本篇參考 <a href="https://www.youtube.com/watch?v=swQ5pVxDHwo" target="_blank" rel="external">youTobe by Ben Lue</a></p>
<h3 id="開始之前">開始之前</h3>
<ul>
<li><a href="http://www.coservjs.org/" target="_blank" rel="external">install coServ</a></li>
<li><a href="http://hungjie19.github.io/hexoblog/2015/03/11/coServ-install/#more" target="_blank" rel="external">也可以參考之前的coServ安裝心得</a></li>
</ul>
<h2 id="install_Tools">install Tools</h2>
<h3 id="gulp">gulp</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> gulp</span></div></pre></td></tr></table></figure>

<h3 id="browser-sync">browser-sync</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> npm install browser-sync</div></pre></td></tr></table></figure>



<p>以上完成後在 coServ 資料夾中產生 <code>gulpfile.js</code> 內容：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span>  browserSync = <span class="built_in">require</span>(<span class="string">'browser-sync'</span>),</div><div class="line">     gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</div><div class="line">     config = <span class="built_in">require</span>(<span class="string">'./lib/server/config.js'</span>),</div><div class="line">     coServ = <span class="built_in">require</span>(<span class="string">'./coServ'</span>);</div><div class="line"></div><div class="line"><span class="comment">// deal with the www path</span></div><div class="line"><span class="keyword">var</span>  reload = browserSync.reload,</div><div class="line">     wwwPath = config.getWWW();</div><div class="line"></div><div class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</div><div class="line">    browserSync({</div><div class="line">        proxy: <span class="string">'127.0.0.1:8080'</span></div><div class="line">    });</div><div class="line"></div><div class="line">    gulp.watch([<span class="string">'./**/*.html'</span>, <span class="string">'./**/*.css'</span>, <span class="string">'./**/*.js'</span>, <span class="string">'./**/*.inc'</span>, <span class="string">'./**/*.lang'</span>],</div><div class="line">        {cwd: wwwPath}, reload);</div><div class="line"></div><div class="line">    gulp.watch([<span class="string">'./themes/*/blocks/modules/**/*.js'</span>], {cwd: wwwPath}, <span class="function"><span class="keyword">function</span><span class="params">(e)</span> </span>{</div><div class="line">        coServ.restart();</div><div class="line">    });</div><div class="line">});</div></pre></td></tr></table></figure>


<p>最後原本啟動 server 命令為：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">node</span> coserv</div></pre></td></tr></table></figure>

<p>現在有了 <code>gulp</code> 的幫忙直接啟動它，就會幫我們開啟網頁與監聽檔案變動，即時的幫你更新網頁修改畫面！</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gulp</div></pre></td></tr></table></figure>

<hr>
<h3 id="gulp_issue_參考">gulp issue <a href="https://laracasts.com/discuss/channels/elixir/bash-gulp-command-not-found" target="_blank" rel="external">參考</a></h3>
<p>Command Line : <code>gulp</code> 發生以下回應：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="command"><span class="keyword">command</span> <span class="title">not</span> <span class="title">found</span>: <span class="title">gulp</span></span></div></pre></td></tr></table></figure>

<h3 id="將_gulp_改全域安裝的方式，以下：">將 gulp 改全域安裝的方式，以下：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> <span class="comment">--global gulp</span></span></div><div class="line">npm <span class="keyword">install</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://googledrive.com/host/0B4fEFbbW93y5RVh2cjFKa1R0eU0" alt="coServ + gulp 實踐 Live Reload"></p>
]]>
    
    </summary>
    
      <category term="coServ" scheme="http://hungjie19.github.io/hexoblog/tags/coServ/"/>
    
      <category term="gulp" scheme="http://hungjie19.github.io/hexoblog/tags/gulp/"/>
    
      <category term="Live Reload" scheme="http://hungjie19.github.io/hexoblog/tags/Live-Reload/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo 新增文章後幫你開啟 markdown 編輯器]]></title>
    <link href="http://hungjie19.github.io/hexoblog/2015/05/24/hexo-new-%E6%96%87%E7%AB%A0%E5%BE%8C%E5%B9%AB%E4%BD%A0%E9%96%8B%E5%95%9F-MarkDown-%E7%B7%A8%E8%BC%AF%E5%99%A8/"/>
    <id>http://hungjie19.github.io/hexoblog/2015/05/24/hexo-new-文章後幫你開啟-MarkDown-編輯器/</id>
    <published>2015-05-23T16:23:47.000Z</published>
    <updated>2016-05-09T17:52:14.000Z</updated>
    <content type="html"><![CDATA[<p>每次我們開始撰寫文章的時候…會執行以下的流程：</p>
<h4 id="1-_在_command_line_敲下熟悉的指令">1. 在 command line 敲下熟悉的指令</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">"我的新文章"</span></div></pre></td></tr></table></figure>



<h4 id="2-_接著打開_atom、MacDown_或者其他_markdown_IDE_開始撰寫文章。">2. 接著打開 atom、MacDown 或者其他 markdown IDE 開始撰寫文章。</h4>
<p>本篇將<code>自動化</code>以上兩個步驟，讓我們看下去如何操作吧。</p>
<a id="more"></a>
<p>Commend Line 下完直接幫你開啟編輯器，直接撰寫文章！</p>
<p>大家在新增完文章後的動作應該是會開啟 <code>Finder</code> 找到 Hexo 放置的資料夾然後至路徑 <code>Source/_posts</code> 找到剛剛新增的文章，在開啟 <code>Markdown</code> 編輯器或直接開 <code>Sublime Text</code> 撰寫文章，隨著文章變多找起來是相當不易，且動作也煩瑣。</p>
<p><a href="http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/" target="_blank" rel="external">本文參考 liam0205</a></p>
<ol>
<li>首先在 <code>hexo</code> 目錄下找到 <code>scripts</code> 資料夾如果沒有就新增一個囉！ </li>
<li>新增一個 <code>JavaScript</code> 檔案，加入下面的 <code>Sample code</code><ul>
<li>示範開啟 <code>MacDown</code> </li>
<li>註解中示範的是 <code>Sublime Text</code></li>
</ul>
</li>
</ol>
<h3 id="Sample_Code:">Sample Code:</h3>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</div><div class="line"></div><div class="line"><span class="comment">// Hexo 2.x</span></div><div class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span>{</div><div class="line">    <span class="comment">//exec('open -a "/Applications/Sublime Text.app" ' + path);</span></div><div class="line">    exec(<span class="string">'open -a "/Applications/MacDown.app" '</span> + path);</div><div class="line">});</div></pre></td></tr></table></figure>

<p><strong>原理:</strong> 用 JavaScript 監聽 “new” event</p>
<p><a href="https://github.com/hexojs/hexo/issues/1007" target="_blank" rel="external">tommy351 commented on Jan 26</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">You can <span class="keyword">try</span> to listen to the <span class="keyword">new</span> event. For example:</div><div class="line"></div><div class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).spawn;</div><div class="line"></div><div class="line"><span class="comment">// Hexo 2.x</span></div><div class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(path)</span></span>{</div><div class="line">  spawn(<span class="string">'vi'</span>, [path]);</div><div class="line">});</div><div class="line"></div><div class="line"><span class="comment">// Hexo 3</span></div><div class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>{</div><div class="line">  spawn(<span class="string">'vi'</span>, [data.path]);</div><div class="line">});</div></pre></td></tr></table></figure>

<hr>
<h2 id="Reference:">Reference:</h2>
<p><a href="http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/" target="_blank" rel="external">http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/</a><br><a href="http://hexo.io/zh-tw/docs/plugins.html" target="_blank" rel="external">http://hexo.io/zh-tw/docs/plugins.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>每次我們開始撰寫文章的時候…會執行以下的流程：</p>
<h4 id="1-_在_command_line_敲下熟悉的指令">1. 在 command line 敲下熟悉的指令</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="string">"我的新文章"</span></div></pre></td></tr></table></figure>



<h4 id="2-_接著打開_atom、MacDown_或者其他_markdown_IDE_開始撰寫文章。">2. 接著打開 atom、MacDown 或者其他 markdown IDE 開始撰寫文章。</h4>
<p>本篇將<code>自動化</code>以上兩個步驟，讓我們看下去如何操作吧。</p>
]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://hungjie19.github.io/hexoblog/tags/Hexo/"/>
    
      <category term="markdown" scheme="http://hungjie19.github.io/hexoblog/tags/markdown/"/>
    
  </entry>
  
</feed>
